
==================== FINAL INTERFACE ====================
2017-06-07 01:55:15.788431 UTC

interface main@main:Handlers 8002
  interface hash: 546f3b2525a5148753328637c85ceddf
  ABI hash: 6d7c0dc673245123eda241efedaa12ac
  export-list hash: df163549742754855ba72092b2ab1ca9
  orphan hash: d9465c718fb5928c12a0cde9abeb2f5e
  flag hash: cea58010d6f822e09f76168887728323
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.art
  Handlers.dptos
  Handlers.formAlbuns
  Handlers.formArtistas
  Handlers.formDepto
  Handlers.formMusicas
  Handlers.formPessoa
  Handlers.formVertentes
  Handlers.getArtistaR
  Handlers.getCadastroR
  Handlers.getDeptoR
  Handlers.getHelloR
  Handlers.getListarR
  Handlers.getPessoaR
  Handlers.getVertenteR
  Handlers.postArtistaR
  Handlers.postCadastroR
  Handlers.postDeptoR
  Handlers.postPessoaR
  Handlers.postVertenteR
  Handlers.vts
module dependencies: Foundation
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-DDov2e1Yemt94DudUvTLYZ
                      aeson-compat-0.3.6@aeson-compat-0.3.6-2DGXsEffmptCnWvZsLNGWu
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-HsZBRE01qJxJ1MwODysbnY
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.9@case-insensitive-1.2.0.9-DO0AWfy7hdR2nQUG46ef58
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      cipher-aes-0.2.11@cipher-aes-0.2.11-3bgwrLYUdx3AMYHUPuxu87
                      clientsession-0.9.1.2@clientsession-0.9.1.2-KRcVaZxQ84gBM2BKF2NUTQ
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cprng-aes-0.6.1@cprng-aes-0.6.1-9Ysh71z5FLmK1QfZUn0KHr
                      crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-2naOMJ2jnvG5GhEt4Ao7bp
                      crypto-random-0.0.9@crypto-random-0.0.9-AoGITFIsDYP2IQzwS9RQF8
                      cryptohash-0.11.9@cryptohash-0.11.9-AwRqZE0EZ5i8pER7MJsLoX
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-DQeBh2BGjiJ2aigRmOz6SM
                      cryptonite-0.21@cryptonite-0.21-47iYBNmsFlII2FZyak8KXj
                      css-text-0.1.2.2@css-text-0.1.2.2-H2nzLAF8Lvh29Ya09mQHei
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5
                      entropy-0.3.7@entropy-0.3.7-GVoReSVE1cZ4Y1pKgzhBYO
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.7@http-api-data-0.3.7-Fjq248miKA8D5hFdZGD7aB
                      http-date-0.0.6.1@http-date-0.0.6.1-DIpeM7nOKwq7aBmb5ryU4N
                      http-types-0.9.1@http-types-0.9.1-AUkzzKpOoLmKIvDSpmjcFz
                      http2-1.6.3@http2-1.6.3-AntBmJg95Sg1Na7lIPgyhO integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      memory-0.14.3@memory-0.14.3-HxN2RgwYLqT3iHrmHIXRUq
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      path-pieces-0.2.1@path-pieces-0.2.1-7jYjtDsNHN0JfYriIYgB3j
                      persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem
                      persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC
                      postgresql-libpq-0.9.3.0@postgresql-libpq-0.9.3.0-FVKnfWO5tn29L1HQjaQ0as
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-7l6cEp6CJ0z95XHG51qnvo
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      securemem-0.1.9@securemem-0.1.9-8Xi2wNoj8BIHAoMFWnW1JR
                      shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-JJ9zm1wZxYIARxlVa3oQgs
                      skein-1.0.9.4@skein-1.0.9.4-1r9hT02ZzU5HeQ9SvXvQV
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-6d5jSu6VuYIIoyQixz5L7u
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-H6cJdoNnPqk1Ch333qtaPo
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-2rsQ1EVge26CO53M4gLdkE
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-3in25hi26fo3ynYVCgt8Z3
                      wai-logger-2.3.0@wai-logger-2.3.0-EYYpHmikC5d8pavu5CHXnD
                      warp-3.2.11.2@warp-3.2.11.2-EncNvviAzZWHK6yVvhIgD5
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-9L4rIyhZC8H6IVBX0SpXFc
                      yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV
                      yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8
                      yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf
                      yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5:Text.Email.Parser
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Bitmap
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Boxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Buildable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Collection
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Element
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Keyed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Mutable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Numerical.Subtractive
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Monad
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ASCII7
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF16
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF32
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.UTF8
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistConfig
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Handler
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Types
                         yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy:Text.Blaze.Html 288dbf097dbd0ff17b50c3c1330477db
import  -/  blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT:Text.Blaze.Internal 52ba665013f4dfa6d731e8584348806e
import  -/  Foundation 219e48e30eb3244c1e86079a5140c1c7
  exports: 90e1a1737e3474f58b146a86dcb7ea53
  Albuns b0000fe329035d1326e088119fece002
  Albuns 1550ce2ba72d60f11ba7e30e9d21f50e
  ArtistaR a70429d56a107b4d6db3362c8f88024a
  Artistas a623c407255cb556d07a2abb25303641
  Artistas 7028c63682a369c8d1005b4be4bc5024
  ArtistasNome a01dc1e9b4f75dae61f172ddc13a836c
  CadastroR a2bfa09e02493c9f2f292fd30d5b99c2
  Departamento cab331b413f1f8bdf4dcc3a44c719bd5
  Departamento 1f643bd4ff006fb0ea448fb6a542b1d2
  DepartamentoNome ff8815e1549a9993ad20ffaf3fc44437
  DeptoR 0a7e8347d208b617405a6d75ea3ab188
  Form 816874437f65176d8b08af502ba290a1
  Handler 85f2ae60b49112b5c73caa5dc4903a7f
  ListarR 82985be16cd824263b9b5bca0149179e
  MsgHello 56b62de683c484b0d5893a6cc524ca72
  Musicas 31ade3738f2c3b29fb29311696a31303
  Musicas 894a0655e8be8debcf1a38438b7be316
  Pessoa 27ec7dec9df08e641310e1f38d0235a1
  Pessoa eefeeff98179c4803437641b291f8edb
  PessoaId 47b4e94ce1054257f19d2e9e5535059d
  PessoaNome 2f42f37c49fbe49ef9c695356bbe2d9d
  PessoaR f07020f523ea90590b9db45778cfd197
  VertenteR 2fb97617c428723062f2e0202aad93e1
  Vertentes 04163c216405d05470751ced3f22ceef
  Vertentes 4c607bc65487903389164c2f0c7dab2d
  VertentesNome 582a837b3231d1b49371c1e0bb89e14b
  artistasNome 46ffdf6c3dd8efbc2ccd427e011712a0
  departamentoNome 897c551716fee51b76e4748c2a34ac63
  departamentoSigla f612561c92775c6417ab72e0189104dd
  pessoaDeptoid 7ede54ea369172f25ddb6f7264a363dc
  pessoaIdade 1136655719418f9280ee06499b910f66
  pessoaNome cb4eb4346b5099b69a94b3984406bd99
  pessoaSalario be2bfc74e89e1ef8a27536014ecbd427
  vertentesNome 869d64aecf99699a7a1c7c3ddb3af76d
  widgetForm c71395b36ec70001bfc91ba68f0cc346
  widgetFormArtista 09bdc81027237b9366d68f7420ec665a
  widgetFormVertente 265ac8a9b81ccc231aba4567e05964fa
import  -/  monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger c186132138b23c0e4c9839f4d7247bee
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistEntity 2dfa7e1527d6a9f72c2e7017cee17d47
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistQuery 876fe93620908107224b47244ae2dedc
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistStore a52bd5d94452c0e7428ebf6bdf575274
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql 326569900059893a227843896529734d
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css ae836951711b38c5fd293d4083625473
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Lucius 3f4d62d4427349a5525aed8b7fcba880
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
import  -/  yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV:Yesod 9b32a342acc9baee13df0be07e3d39c5
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Yesod 0f950f5b38ca208030e2bcd8e2a1d8de
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Handler fb74858425a74dc2ac28440095be4990
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Widget 50472288dfa3af7a662f0b4e16cf1eb4
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Fields 65812cd1c1936c49201654803f10a7e1
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Functions 30116c4748d2a9aa9d527802b240f53f
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Types e06b3d57400b5cd8ec2ddccfdae55536
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf:Yesod.Persist.Core 39014f6db198f5fe2002eb686b30660e
addDependentFile "/home/user/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
865b28a74bb1ede86db4e9128b13173a
  $s$WArtistasNome_$d~~ ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
a4f7ac5f9a2b58d095e58e7fa5eca4f5
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
1b9fb0b9ed37df562f2a704a99907cdc
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta36 :: a)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta36) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
d8aae7366d45a8369a7d2b3034ff7f77
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
5855a25f2d112af3b174ac7ee18fb8e5
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
cef4c830bbd81fcc82f71d34869c101e
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio) -}
fe0eed2ae4185e337330ea9a5c84c63b
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handlers.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site) -}
58019450207c10e1a530a73d98988a0e
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta36 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta36) -}
755d1a4f0e865bb1fe4f8b9b6a2ac77f
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
fd9453380e0a053b886e9ad275068fee
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta36 :: GHC.Types.IO α) ->
                 let {
                   eta37 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta36
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta37)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
e10d5b97f460f2ec519974911eb34444
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
5ecdfa7a1469bbbcbd74661d071b6928
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
68ec4e11a09838193976e3d2a6ddae1c
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fFunctorAForm_$s$fMonadHandlerT -}
c484a81369df10ea17746c4592af209e
  $s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeHandlerT -}
0de912c1d3b3a44b42982b4ba98a9559
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
fe753515d055cfa47183adb3e74f2eab
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
ccb9baa7f34ee96e77447183b3ac3846
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
35d1a4947b2b33db59e190dd672a1dd0
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
e89c5c7f3e491a5cf3c24bb496f2fef8
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta36 :: GHC.Exception.Exception e)
                   (x7 :: e)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta36 x7) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
3fc57680154be05157bd14c14028713a
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
043d9f6567dcf145f0e398939552b84b
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
fdc5284469d7304442e9a646e1c739e0
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
18b2c2a555c6ae7dab351fc53981bb6a
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
4b3283fdd6c03469cc419e83c3411b82
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebHandlerT -}
0a8e88287bfd991acf62afbde56d2164
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Handlers.$s$fMonadHandlerWidgetT @ site)
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
52329655c94357bb4b343a794b4f4ae8
  $sdoubleField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Double
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Double
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ GHC.Types.Double
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      Yesod.Form.Fields.doubleField6
                      eta156)
                   (Yesod.Form.Fields.doubleField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
e577a5a0267162af74eaf9daf0288afe
  $stextField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.textField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
31be6a3b760cb8833ebf3a06261d0b74
  $stoWidget4 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    GHC.Types.~~ (Yesod.Routes.Class.Route Foundation.Sitio
                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                  -> Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @~ <Yesod.Routes.Class.Route Foundation.Sitio
                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                       -> Data.Text.Internal.Text>_N) -}
e4a5126e72ecc1bb3faec9fdea259a3e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handlers.$trModule2
                   Handlers.$trModule1) -}
492d30345dc715837194b01f4c7b2ead
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handlers"#) -}
ceb9374a275b5be835fffdbec8f828ce
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
8ec9f616fd72089718cacc7275d7b5f9
  art ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Artistas
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityArtistas,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Artistas>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Artistas))
                          Handlers.art11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Artistas]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Artistas]>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                         Handlers.art2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Artistas)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Artistas)>_N)))) -}
201cf4bf0edf0bc54279c81bc811a1e5
  art1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Artistas) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                        Handlers.art3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas]>_N))
                        r
                        s of ds4 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                        Handlers.art2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                   ipv }) -}
5327ef2fe7bd60c269eb2265536c2834
  art10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
1c4894416f18843acfae0887fe6aee92
  art11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
744e8306abb24d57da9bde62560efe47
  art12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
b39b89aab7226083a83c34640b9bea20
  art13 ::
    Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WArtistasNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
ea77c6c9856f6b57ac5a27bd364892a5
  art2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Artistas
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Artistas) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds4 ds5 ->
                  case ds5 of wild1 { Foundation.Artistas ds6 -> ds6 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Artistas
                    ent)) -}
c2d068bb0b6a20f1e2b60c6627264fef
  art3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)))
                   = Handlers.art4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Artistas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas))>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Artistas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Artistas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Artistas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Artistas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Artistas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Artistas]>_N)))) -}
cb7bf8afa580383308c78f5e88945f2c
  art4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Artistas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.art9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Artistas))
                   Handlers.art5) -}
30a4fd8c9052e048d39d26f901cbff71
  art5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
ba2019905fe1d1d0f4941ffc488d6151
  art6 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
6fe1b1b061c8562182eef416790d1f12
  art7 :: Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.art8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
eff68bb55b5f0b1a539b849b1c3fd99b
  art8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
720446356a941010a173c0ab49a91a60
  art9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Artistas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityArtistas,
                  Handlers.art10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
7d237f51e86a17d34b619a139f3ab1af
  dptos ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Departamento
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityDepartamento,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Departamento>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Departamento))
                          Handlers.dptos11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Departamento]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Departamento]>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Departamento)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                         Handlers.dptos2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Departamento)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Departamento)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Departamento)>_N)))) -}
dc0a73162ea5819412c78709381d1ec2
  dptos1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Departamento) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento]
                        Handlers.dptos3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento]>_N))
                        r
                        s of ds4 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Departamento)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                        Handlers.dptos2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Departamento)>_R)
                   ipv }) -}
2f1101aaff980ea91ce171623fc477ba
  dptos10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
f21a70d388abc5dd0be26d2baabe3ef6
  dptos11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
559c97ccc445f5c4b2fd1e96cbd3acf4
  dptos12 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
8f922a10bbfad04483d02928410b86dc
  dptos13 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WArtistasNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
2024ab23cef493970a21ae37ee20fd38
  dptos2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Departamento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(A,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds4 ds5 ->
                  case ds5 of wild1 { Foundation.Departamento ds6 ds7 -> ds7 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Departamento
                    ent)) -}
3be18957de310d3ede37c653867d64ed
  dptos3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Departamento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento)))
                   = Handlers.dptos4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Departamento))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento))>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Departamento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Departamento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Departamento]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Departamento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Departamento]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento]>_N)))) -}
7bf3cb14407d21b517f90c3d77ffbf42
  dptos4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Departamento)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Departamento
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.dptos9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Departamento))
                   Handlers.dptos5) -}
d26b5bc910a517969628cae6ea4b2603
  dptos5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
7e03ff5e9de0073c434f9dab1bf2dd4f
  dptos6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
5de7c9a2735d0767aa61bd753cc4a2bd
  dptos7 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.dptos8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
8539a1a0de7eebf588f50fd7fde54664
  dptos8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
0bedde7baa0ec43dee95bef8be4f01d9
  dptos9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.dptos10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
d8dd13a90972087fd4e595e6c87e7fc7
  formAlbuns :: Foundation.Form Foundation.Albuns
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formAlbuns1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
276ead970356e1c0575bec91a0d55069
  formAlbuns1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Albuns,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Albuns
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formAlbuns2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Albuns>_N))
                   eta105
                   eta106
                   eta107) -}
3f239e3f0f4fec8dfc6244bb53860a3b
  formAlbuns10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns11) -}
15010617ec6a49a1c18822d5ca3bc2d6
  formAlbuns11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formAlbuns12 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
58a962b35a5046b23fbd319d63c59bce
  formAlbuns12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formAlbuns13
                   0#
                   ipv }) -}
0fac9a0de273da1541fb1db3f42ef536
  formAlbuns13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
6bf4f08f568be225e81fce07e7ee49c1
  formAlbuns2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Albuns,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formAlbuns_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds5 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Albuns errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Albuns
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Albuns
                                  (Foundation.$WAlbuns a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
745b890817562bd66148224d25f3df02
  formAlbuns3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
44bbf0f75c3f34b43711211951b3c08c
  formAlbuns4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns5) -}
f7ba166bbbaac8e0fd2c785f7cf144c2
  formAlbuns5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formAlbuns6
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
088b25c894a2a9d610fb1ea5af3ead95
  formAlbuns6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Artista principal: "#) -}
6243754cb761f47f4fc16d8ddf239c71
  formAlbuns7 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Handlers.formAlbuns8
                   Handlers.art1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Artistas)>_R))
                        (Sym (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Artistas)>_N)))) -}
e15cf5bf95d51c8a3a443c8b08345918
  formAlbuns8 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   @ Foundation.Sitio
                   Foundation.$fEqKey8
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
93b44e9c1a2d26149881a01a84c5d61d
  formAlbuns9 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
87acc1aab4a449061db6c766b1a470c8
  formAlbuns_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formAlbuns9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c1dba7fb676e5d4096a60090f3e36fb5
  formAlbuns_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns7
                   Handlers.formAlbuns3
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Artistas))) -}
921462c1bf4c48924b670b445bfee587
  formArtistas :: Foundation.Form Foundation.Artistas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formArtistas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
f4014a5edda21d6fd4319700cae2f542
  formArtistas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Artistas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formArtistas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Artistas>_N))
                   eta105
                   eta106
                   eta107) -}
e34fff14f49fb617f30651438a16ae27
  formArtistas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Artistas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta36 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta37 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta38 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta36
                       eta37
                       eta38
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x7 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Artistas
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Artistas errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Artistas
                             (case a1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Artistas dt }) },
                      x7, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
7fe51ead3ed450bc66e9ace6d30a6af5
  formDepto :: Foundation.Form Foundation.Departamento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDepto1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
db8da5c2f91439e63cbb12806e6ce340
  formDepto1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Departamento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formDepto2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Departamento>_N))
                   eta105
                   eta106
                   eta107) -}
ce21a15dae472ebb19f14be4a754ee3b
  formDepto10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto11) -}
51aa526a4d7175d3ca5e4c1e0cdedb58
  formDepto11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formDepto12
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
ca6cdf1f41355d533724b9919a319973
  formDepto12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sigla"#) -}
034a2495e315794033327dba6dfb4df6
  formDepto13 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto14
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
8e01f0c9b2c43ae4011d1df87056d107
  formDepto14 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto15) -}
c8758eac5d63d1545ed3b52eb6cad813
  formDepto15 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formDepto16 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
9e18b477bd53f1a365f9bb7055296820
  formDepto16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDepto17
                   0#
                   ipv }) -}
fbd0a237979aa24b4c5ccf277fc7924a
  formDepto17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome"#) -}
d341c52e7928206a278b0bbb2f5c33b3
  formDepto2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Departamento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formDepto_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formDepto_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Data.Text.Internal.Text>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds5 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Departamento
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Departamento
                                  (Foundation.$WDepartamento a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
e1f929f93224d9a401b3c79b7e91cb80
  formDepto3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   Handlers.formDepto8
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formDepto4) -}
f0d719b1a483d64583d406cb1a21e90e
  formDepto4 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formDepto5
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
162b50ea0b0ad7b6c9750db52d95ec04
  formDepto5 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formDepto7, Handlers.formDepto6)) -}
a38a20acc51a79d9b0eed9ecab4c995c
  formDepto6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "3"#) -}
00cc82982b0976e3b4f5bd404c54a833
  formDepto7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
19c01efa76c9010629a59bb5f3373777
  formDepto8 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formDepto9) -}
ebf659680d4848d410a351ba3d95e5ad
  formDepto9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
50d859d76477187e06e8eb673cff5365
  formDepto_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto13
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
08672fd92a5f67ba471805e51de0562d
  formDepto_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
0e82b42a366def914e1db6625783f7b4
  formMusicas :: Foundation.Form Foundation.Musicas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formMusicas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
aa01e5fd40187a2db4d2d98315de76a7
  formMusicas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Musicas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Musicas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formMusicas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Musicas>_N))
                   eta105
                   eta106
                   eta107) -}
456ed4a03510ab72bc2d0da6ff81b540
  formMusicas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Musicas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formAlbuns_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds5 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Musicas
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Musicas y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Musicas errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Musicas
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Musicas
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Musicas y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Musicas
                                  (Foundation.$WMusicas a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Musicas,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Musicas,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
a4dcb034d869c697aafe42447fc31f63
  formPessoa :: Foundation.Form Foundation.Pessoa
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
37bbc7454eaa682dfe4fa9e14ae2a87c
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Pessoa,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Pessoa>_N))
                   eta105
                   eta106
                   eta107) -}
f1ee8291256451fac2ff66c59208c90d
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoa,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
5a0558650a5a05bcb7043c8ad6c311c0
  formVertentes :: Foundation.Form Foundation.Vertentes
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formVertentes1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
0496d8cbd9ad769fd4e894c4ae8b4c93
  formVertentes1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Vertentes,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vertentes
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formVertentes2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Vertentes>_N))
                   eta105
                   eta106
                   eta107) -}
a2aed999a00a8c06f442226c4b3dba07
  formVertentes10 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vertentes)))
                   = Handlers.formVertentes11
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Vertentes))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes))>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Vertentes]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Vertentes)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Vertentes]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Vertentes]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Vertentes]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vertentes]>_N)))) -}
ae1a1d23f9e2c03766bde287d0524291
  formVertentes11 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Vertentes)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Vertentes
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.formVertentes16
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Vertentes))
                   Handlers.formVertentes12) -}
e4b1db70d973a0c199e511ef609a0703
  formVertentes12 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.formVertentes13
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
93b493addf6b8dacc081eeeadb5f337e
  formVertentes13 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.formVertentes14
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
fc401a1252c09e600a0b48dab5b8c9a7
  formVertentes14 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.formVertentes15
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
88866fe9a611772dfd8c44deaac5d942
  formVertentes15 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
0799f14530479a045c663a9983404c30
  formVertentes16 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.formVertentes17
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
69bf3e99edf3d6d643cea88d215e4a9f
  formVertentes17 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
50e3a355d49b3d25ff704865bcb29707
  formVertentes18 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                   @ Foundation.Sitio
                   Foundation.$fEqKey7
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
b3efa3143e44d39b5774efda3d7f0e6c
  formVertentes2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Vertentes,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formVertentes_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Vertentes>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds5 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Vertentes
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Vertentes
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Vertentes
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Vertentes
                                  (Foundation.$WVertentes a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
2048a2433d8725f51747cc620acc40a1
  formVertentes3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formVertentes4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
625ac8859ffc343d7819f8a2614c209b
  formVertentes4 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formVertentes5) -}
d23421f07ab4126f824c713a03068587
  formVertentes5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formVertentes6
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c1cf6f5eb25357f0587bc92ed165710d
  formVertentes6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Vertente M\\195\\163e: "#) -}
d61f29a0f918e73d8346e08ec7c4d2f8
  formVertentes7 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Handlers.formVertentes18
                   Handlers.formVertentes8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Vertentes)>_R))
                        (Sym (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Vertentes)>_N)))) -}
7bd52931a0fe214813babb10413b4a31
  formVertentes8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes]
                        Handlers.formVertentes10
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes]>_N))
                        r
                        s of ds4 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                        Handlers.formVertentes9
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                   ipv }) -}
cd32c0fdb276fb6efc2f9e06ceb72c13
  formVertentes9 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds4 ds5 ->
                  case ds5 of wild1 { Foundation.Vertentes ds6 ds7 -> ds6 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Vertentes
                    ent)) -}
017fb5320ba7d430664b0287d0cfe2f4
  formVertentes_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes7
                   Handlers.formVertentes3
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Vertentes))) -}
b61fcfcc57013111516184071bad3fc5
  getArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getArtistaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c31517483ac1d56aff845869b8a4ea30
  getArtistaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getArtistaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetFormArtista1
                        Foundation.ArtistaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getArtistaR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
fdbaae896acd7b27f1693004238deffb
  getArtistaR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Artistas"#) -}
45418446ba67dced3c10ee192359153c
  getArtistaR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formArtistas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
3a37b7a0652db4fa073500a5ebb73d94
  getCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ef9d39235335fa09c268abfafcfdba42
  getCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getCadastroR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.CadastroR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getCadastroR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
e8e1990762d4569113fb7e8d69dcc1d0
  getCadastroR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Pessoas"#) -}
f63d8a0cb057ece7f9ad5a9cd7de7993
  getCadastroR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
587908e33c8f322296c87d519bc93f15
  getDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
4bc8c606b7d44d8ce7843d171edb3eec
  getDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getDeptoR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getDeptoR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
94eda26cb7b150e9c22156b9ecbe3960
  getDeptoR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Departamentos"#) -}
a72479706df5bd3a2d12962883cd3f4f
  getDeptoR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
775c91edda9c415ca31d4eedf8df82b6
  getHelloR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getHelloR1
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
1f18dd56e38ce6ed98b4602e0f79e5f1
  getHelloR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR14
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHelloR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta36) -}
2e33d9782a66ec62e652c59b8434dfa2
  getHelloR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   @ ()
                   Handlers.getHelloR12
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N))
                   Handlers.getHelloR11) -}
2c3eb60566c993fca084ca37e6003801
  getHelloR11 ::
    (Foundation.SitioMessage -> Text.Blaze.Html.Html)
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (urender :: Foundation.SitioMessage -> Text.Blaze.Html.Html) ->
                 let {
                   eta36 :: Text.Blaze.Html.Html = urender Foundation.MsgHello
                 } in
                 (\ (eta37 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta38,
                     (GHC.Tuple.(),
                      (Yesod.Core.Types.GWData
                         @ (Yesod.Routes.Class.Route Foundation.Sitio)
                         (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                          eta36)
                           `cast`
                         (Sym (Yesod.Core.Types.N:Body[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                         (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                           `cast`
                         (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Script
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Stylesheet
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (Data.Map.Base.Tip
                            @ (GHC.Base.Maybe Data.Text.Internal.Text)
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Data.Text.Internal.Builder.Builder))
                         (GHC.Base.Nothing
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Text.Julius.Javascript))
                         (Yesod.Core.Types.$fApplicativeWidgetT2
                            @ (Yesod.Routes.Class.Route Foundation.Sitio))
                           `cast`
                         (Sym (Yesod.Core.Types.N:Head[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
242a34ea58ba7b11175177c1b5ee1314
  getHelloR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         (Foundation.SitioMessage -> Text.Blaze.Html.Html,
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Data.Text.Internal.Text)
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   Handlers.getHelloR_m1
                   Handlers.getHelloR13
                     `cast`
                   (<Foundation.SitioMessage -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <(Foundation.SitioMessage -> Text.Blaze.Html.Html,
                                              Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route Foundation.Sitio))>_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N
                                       <GHC.Types.IO>_N
                                       <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N)))
                   eta36) -}
3cb1bb43afb4316ffb02fe8d00c02ba5
  getHelloR13 ::
    (Foundation.SitioMessage -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Foundation.SitioMessage -> Text.Blaze.Html.Html,
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (x7 :: Foundation.SitioMessage
                          -> Data.Text.Internal.Text)
                   (ds :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (\ (x8 :: Foundation.SitioMessage) ->
                     Text.Blaze.Internal.Content
                       @ ()
                       (Text.Blaze.Internal.Text (x7 x8)),
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)) #)) -}
f85566f34a34b05ba692666f0e6dc103
  getHelloR14 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getHelloR15 eta37) -}
39bef2d6977ba963d4d1c73afc2376ba
  getHelloR15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Handlers.getHelloR16 #)) -}
48d7c39ee85c9e3ec4eb6faf827513bb
  getHelloR16 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHelloR17
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
94c91db5ba22a439401b829655339098
  getHelloR17 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getHelloR18
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
340e08a7c7578ae45f0376b184125780
  getHelloR18 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handlers.getHelloR_eta1) -}
418fcbea26e50ac5b54790924488f8b7
  getHelloR19 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHelloR20) -}
dd24ebafe687b4a61d32b1a40291989a
  getHelloR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ (ds :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR10
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHelloR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta36) -}
48bfe04c0058ee21cf99945e1bb849c0
  getHelloR20 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHelloR21) -}
3d1640fa9e310ec83655ede4ace3920a
  getHelloR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> "#) -}
940f07e1dbb2e8398a293930071b85a0
  getHelloR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.getHelloR4 #)) -}
eb185a97c11eb897c578d3cd994af3be
  getHelloR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHelloR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
520aba4a9ff49655941c9fde07d3a3a4
  getHelloR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getHelloR6
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
0a75eafc0a5197d45a9514d9bf3c3f6c
  getHelloR6 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handlers.getHelloR_eta) -}
3e6406ce8de81e146c613d480cb3de78
  getHelloR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHelloR8) -}
97802bc5a227fc5acf6379a62a50a88c
  getHelloR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHelloR9) -}
71a34106ea9545b88bbc1ef227403efe
  getHelloR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
aa229ba5396716253ada4bc4f8c19141
  getHelloR_eta :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHelloR7) -}
419713c994a35ef7263df680e5011d64
  getHelloR_eta1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHelloR19) -}
0780e3ad40b95f99c1712794d7506279
  getHelloR_m1 ::
    Yesod.Core.Types.WidgetT
      Foundation.Sitio
      GHC.Types.IO
      (Foundation.SitioMessage -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getMessageRender
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.SitioMessage
                   (Handlers.$s$fMonadHandlerWidgetT @ Foundation.Sitio)
                   Foundation.$fRenderMessageSitioSitioMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Foundation.SitioMessage>_N))) -}
120587f3f651f87b1cce4eaca37caa5f
  getListarR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListarR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
9098fef45fcb4905ea091d9497041dc9
  getListarR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                        Handlers.getListarR40
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa]>_N))
                        r
                        s of ds4 { (#,#) ipv ipv1 ->
                 let {
                   lvl98 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                     {- Arity: 3 -}
                   = \ (ds :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                       (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     Handlers.getListarR39 ipv1 eta36 eta37
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m1 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getListarR34
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl98
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <((),
                                                       Yesod.Core.Types.GWData
                                                         (Yesod.Routes.Class.Route
                                                            Foundation.Sitio))>_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta36
                      } in
                      (\ (eta36 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         m1
                           `cast`
                         (Sym (Yesod.Core.Types.N:WidgetT[0]
                                   <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         Handlers.getListarR2
                         eta36)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
a1dead5bb0ffe9ee2f9bfb12b0d58cee
  getListarR10 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR17
                   Handlers.getListarR11) -}
fa3154592f5276e9b0f3802aca31ee7d
  getListarR11 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR12
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
d6b59a2f85c8369d37fbd69fcb0565a7
  getListarR12 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR15
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR13
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
6411e16677439fd0a271b3275466a9a2
  getListarR13 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR14)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
3f9e21845b7848a96d935571f2ab91d0
  getListarR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "0"#) -}
d409740e86021410994fa513e95dc129
  getListarR15 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR16)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
0bd815f3aa9835fb5487f64d14d1e2ba
  getListarR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "border"#) -}
c88989f17532bb92e2c55205a711bb90
  getListarR17 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR20
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR18
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
a0cc08bd376c820ea1454d53e2fd08b6
  getListarR18 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR19)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
f9832d9a7bd16bf0634a05324f051911
  getListarR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#ecc"#) -}
f23d0a0df8f8d46758d54595885aa152
  getListarR2 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, Unfolding: (\ (ds :: ()) -> Handlers.getListarR3) -}
e4d79cc16b8254f42a5268fddd7048ee
  getListarR20 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR21)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
d5b3c33d43f89c9073e03e60cf2753b7
  getListarR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "background-color"#) -}
453c4720792bd43d9dc597e2a71b4418
  getListarR22 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR23)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
24fedf17cdf9a91e6be464b7280a04af
  getListarR23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "input"#) -}
9bd59651ea694f5676187c028451f2fd
  getListarR24 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR25) -}
aedc382a13e2bcf7c85056d260763218
  getListarR25 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR32
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getListarR26
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
b39d2b780251c7c648621aa171d6d4a5
  getListarR26 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR27
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
352affb964b0fca0fb87a6079c158820
  getListarR27 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR30
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR28
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
18e4f9398b444343972c8045c984dea7
  getListarR28 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR29)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
18743b29a605f5cbdea079ff712bc9d5
  getListarR29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "inline"#) -}
005753ccd728a29945467044ae8f1d52
  getListarR3 ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.Sitio
                   Handlers.$stoWidget4
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.Sitio
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.Sitio
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   (Handlers.$s$fMonadWidgetWidgetT @ Foundation.Sitio)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   Handlers.getListarR4) -}
c86251eb43005179d1f2ac1c840ea5eb
  getListarR30 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR31)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
a81e868a97f5d608b00cf53760cbc7a8
  getListarR31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "display"#) -}
39c70081642cc8925d752489d0d0c392
  getListarR32 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR33)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
3af747250f2d4592c778fe84ece08e4f
  getListarR33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "form"#) -}
8faae5a30c2bf91335c0e9f597e04dea
  getListarR34 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getListarR35 eta37) -}
cf470c75929da9f799b9a4ab4d587014
  getListarR35 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handlers.getListarR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
ccb703fc4c883738aea00d21fbe7e230
  getListarR36 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getListarR37) -}
7fabbcf8df09a8748bfe63958931ca81
  getListarR37 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getListarR38) -}
5dde1669fe75bb4d245dc1c06e0171f4
  getListarR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Pessoas cadastradas:</h1>\n"#) -}
1a0bdd3c6cea3ae262e4aae73742affb
  getListarR39 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
11aa2b2e7fef8bcb860cb469dcb25039
  getListarR4 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Internal.Css.Css
  {- Arity: 1,
     Unfolding: (\ (_render :: Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 Handlers.getListarR5) -}
32a8065b7cf53ccfc15aa09a2be78564
  getListarR40 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
                   = Handlers.getListarR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Pessoa))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Pessoa))>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Pessoa)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Pessoa]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Pessoa]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Pessoa]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Pessoa]>_N)))) -}
41bb42d026040ab3bb101689dc00662b
  getListarR41 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Pessoa)
                   Handlers.getListarR42
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Pessoa))) -}
6ecbc46da65d1f22d63278362f0c57aa
  getListarR42 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Pessoa
                   @ Data.Text.Internal.Text
                   Handlers.getListarR43
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldPessoatyp0[0]) <Data.Text.Internal.Text>_N)) -}
27a7a52a2bc5dd16df454283a5b2f078
  getListarR43 ::
    Foundation.R:EntityFieldPessoatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.PessoaNome
                   @ Data.Text.Internal.Text
                   Handlers.getListarR44
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
8b73efae70c6fdc98a4350556f40b4a1
  getListarR44 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
b19576c90c4888e78ea826f5054d715c
  getListarR45 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Pessoa,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityPessoa,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
2598ee9beea50e5c1f334e5152b8ca84
  getListarR46 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
82dd3e8909f58457557df62b6e54f53f
  getListarR5 :: Text.Internal.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Internal.Css.CssNoWhitespace
                   Handlers.getListarR6) -}
fe7af6e32e811ba3e35410b0da8c88f2
  getListarR6 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getListarR24
                   Handlers.getListarR7) -}
fa01e73c6e3e6b07bf6fd1bc79b70346
  getListarR7 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getListarR8
                   (GHC.Types.[]
                      @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved))) -}
3327d6f54ffb6a29ab345fda7e710321
  getListarR8 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR9) -}
e636e66994ca1082850f0210648a367d
  getListarR9 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR22
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getListarR10
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
3eae55c70a8a752ab6be24ee4f00a331
  getListarR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getListarR36) -}
ee126b111e9e7f6b9fb02deffae3a7d9
  getListarR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Pessoa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.getListarR45
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Pessoa))
                   Handlers.getListarR41) -}
a214c6401a9743b72b44e45be8cc6978
  getPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
88121757f2d0b57d21cfa39d107c6fb4
  getVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
8bfc105f179e25e381b30c9f5156eaae
  getVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getVertenteR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetFormVertente1
                        Foundation.VertenteR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getVertenteR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
172c85640a27ec54cc8023ee1f0970a8
  getVertenteR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Vertentes"#) -}
7119d453bdc284045e1d91269ab94fd5
  getVertenteR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
fa4c3d350bbc273ba5eb7f5778d23b85
  postArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Strictness: x -}
47f42c2515a8cb9c4b84d685e9f2fbcd
  postCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ce0e143196ebe561793565b1e53b398d
  postCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postCadastroR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds5 ->
                 case ds of wild1 { (,) result ds6 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadastroR10
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
                             (Handlers.postCadastroR9 pessoa)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Pessoa>_N)_R
                             r
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case pessoa of wild3 { Foundation.Pessoa ds8 dt dt1 ds9 -> ds8 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                 -> [(Data.Text.Internal.Text,
                                                      Data.Text.Internal.Text)]
                                                 -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m1 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl98 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds8 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m1
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postCadastroR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl98
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
0af6357ab197d4a8e2a66e5f43028dba
  postCadastroR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.CadastroR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
e31e08c86dcaec75720bf272acdfbf85
  postCadastroR11 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Pessoa,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
c6f01a362282f6e5201d2fb7f28bede7
  postCadastroR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postCadastroR3 #)) -}
1b05494284104d71a0224854ff90e6ee
  postCadastroR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postCadastroR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
2c0d36ef6b96978f7134b880fe6f3312
  postCadastroR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postCadastroR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
00e56b4d383088a8f4bcb17812353dd2
  postCadastroR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handlers.postCadastroR_eta) -}
0f62ec34b30a0698e356f2ecd36f02b6
  postCadastroR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postCadastroR7) -}
23ae368bfb37eb380f90254ea5edcfde
  postCadastroR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postCadastroR8) -}
87d69d0c37dff6093fe0adba82201977
  postCadastroR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inseridx com sucesso. </h1>\n"#) -}
38972b96b04ff2bc704ba104fd3f58b1
  postCadastroR9 ::
    Foundation.Pessoa
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getListarR45
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
ab885329880b5a9881890cf82b7bb67c
  postCadastroR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postCadastroR6) -}
7c1bfe0821456f07964be921de78df3a
  postDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
9c0e4e61870044a5da3c4181b40bff99
  postDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postDeptoR12
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Departamento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Departamento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds5 ->
                 case ds of wild1 { (,) result ds6 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postDeptoR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess depto
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Departamento)
                             (Handlers.postDeptoR9 depto)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Departamento>_N)_R
                             r
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case depto of wild3 { Foundation.Departamento ds8 ds9 -> ds8 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                 -> [(Data.Text.Internal.Text,
                                                      Data.Text.Internal.Text)]
                                                 -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m1 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl98 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds8 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m1
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postDeptoR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl98
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
3b04b73ef4d4c6ed9e14fc29fcd6b159
  postDeptoR10 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
7b7b5c873ff6445b2faa480f4efead2c
  postDeptoR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
7220887b4911a6f05a64cb81a78da115
  postDeptoR12 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Departamento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
c6556f6d1afbc4b61fe3badd60140640
  postDeptoR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postDeptoR3 #)) -}
cd3fd62dff3c8af26ae664e2fed9debd
  postDeptoR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postDeptoR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
1c158a3503caceb81c49bc01db07233c
  postDeptoR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postDeptoR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
4bccc4d2552320dd17497ef44288d654
  postDeptoR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handlers.postDeptoR_eta) -}
5419ef17fb26fb7bd848a990c75895c9
  postDeptoR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.postDeptoR7) -}
eaf1eaa84d42150b2c8834f3e920dd17
  postDeptoR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postDeptoR8) -}
60aef0843157484c8f9cd97bffb5ef64
  postDeptoR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inserido com sucesso. </h1>\n"#) -}
60628be964bfbd6fb3f100ff8787f3ce
  postDeptoR9 ::
    Foundation.Departamento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Departamento
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postDeptoR10
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
7edae5fb50b0ad63b86d277f3cf583ba
  postDeptoR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postDeptoR6) -}
ee3e8475c53b21c4b25b12033fcbbd40
  postPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (pid :: Foundation.PessoaId) ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           ()
                   = Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                       @ Foundation.Pessoa
                       (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.Sitio)
                       Handlers.getListarR45
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Pessoa>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       pid
                 } in
                 (\ (eta36 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ ()
                         m1
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <()>_N)_R
                         eta36
                         s of ds4 { (#,#) ipv ipv1 ->
                  (Handlers.postPessoaR1
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     eta36)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
99da117d8af8ec971192120f718e9294
  postPessoaR1 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ListarR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
9a3147ccafb49ba9e7c6354ec270c50f
  postVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
8eb69b0002e9d5fdbb60a262a10b3eb0
  postVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postVertenteR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds4 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds5 ->
                 case ds of wild1 { (,) result ds6 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postVertenteR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess vertente
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                             (Handlers.postVertenteR2 vertente)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Vertentes>_N)_R
                             r
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case vertente of wild3 { Foundation.Vertentes ds8 ds9 -> ds8 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                 -> [(Data.Text.Internal.Text,
                                                      Data.Text.Internal.Text)]
                                                 -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m1 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl98 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds8 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m1
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postDeptoR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl98
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
d6a6ccbd035735c989c8d6cb7c82f2bd
  postVertenteR2 ::
    Foundation.Vertentes
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vertentes
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postVertenteR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
2dff892c24a500054ffdad539e6c423b
  postVertenteR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
96f11ed14475117914365344e602a9de
  postVertenteR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.VertenteR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
2c00a0fa285356728e330f3e0ffc2eb7
  postVertenteR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Vertentes,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
c1c08c18935a21a4bd14a517684e3c4e
  vts ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Vertentes
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityVertentes,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Vertentes>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Vertentes))
                          Handlers.vts1)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Vertentes]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Vertentes]>_R)
                         s of ds4 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Vertentes)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                         Handlers.formVertentes9
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Vertentes)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Vertentes)>_N)))) -}
cf929c849776341c7d24bbb467759411
  vts1 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.vts2
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
f0b337a482c2948e3cec6c75a978d8d0
  vts2 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.vts3
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
f065adb70bc7cb040140e92a7e5ca4d0
  vts3 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WArtistasNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
"SPEC/Handlers $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                             ($dMonad :: GHC.Base.Monad
                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handlers.$s$fApplicativeHandlerT @ site
"SPEC/Handlers $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handlers.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handlers $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handlers $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                               GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handlers.$s$fMonadHandlerHandlerT @ site
"SPEC/Handlers $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handlers $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Handlers $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                             ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                              GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handlers.$s$fMonadHandlerWidgetT @ site
"SPEC/Handlers $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handlers $fMonadIOHandlerT_$cp1MonadLogger @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cp1MonadLogger @ GHC.Types.IO
                                                     @ site
                                                     $dMonadIO
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
      @ site
"SPEC/Handlers $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                  GHC.Types.IO)
                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                 GHC.Types.IO
                                                                                 GHC.Types.IO)
                                                               ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp3MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp3MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handlers $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handlers $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                     ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handlers $fMonadWidgetWidgetT @ IO _" [ALWAYS] forall @ site
                                                            ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ GHC.Types.IO
                                                @ site
                                                $d(%,,,,%)
  = Handlers.$s$fMonadWidgetWidgetT @ site
"SPEC/Handlers doubleField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                        (Yesod.Core.Class.Handler.HandlerSite
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.Sitio
                                                                                              GHC.Types.IO))
                                                                                        Yesod.Form.Types.FormMessage)
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                (Yesod.Core.Types.HandlerT
                                                                                   Foundation.Sitio
                                                                                   GHC.Types.IO))
  Yesod.Form.Fields.doubleField @ (Yesod.Core.Types.HandlerT
                                     Foundation.Sitio GHC.Types.IO)
                                $dMonad
                                $dRenderMessage
  = Handlers.$sdoubleField
"SPEC/Handlers textField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.Sitio
                                                                                            GHC.Types.IO))
                                                                                      Yesod.Form.Types.FormMessage)
                                                                ($dMonad :: GHC.Base.Monad
                                                                              (Yesod.Core.Types.HandlerT
                                                                                 Foundation.Sitio
                                                                                 GHC.Types.IO))
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.Sitio GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handlers.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

