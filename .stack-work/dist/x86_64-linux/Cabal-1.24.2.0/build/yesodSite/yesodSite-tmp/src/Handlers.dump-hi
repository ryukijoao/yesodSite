
==================== FINAL INTERFACE ====================
2017-06-08 02:40:21.330932 UTC

interface main@main:Handlers 8002
  interface hash: a8594878c860ae4b5be226e10fe2ab2d
  ABI hash: f3e5f02a99ce71ad7452509634798834
  export-list hash: 6a993a560b03475df4d952d0bccdc092
  orphan hash: 80df3ea7ce8d2120beeb2d7edef71ea5
  flag hash: cea58010d6f822e09f76168887728323
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.abn
  Handlers.art
  Handlers.dptos
  Handlers.formAlbuns
  Handlers.formAlbunsMusicas
  Handlers.formArtistas
  Handlers.formDepto
  Handlers.formMusicas
  Handlers.formPessoa
  Handlers.formVertentes
  Handlers.getAlbumMusR
  Handlers.getAlbumR
  Handlers.getArtistaR
  Handlers.getCadastroR
  Handlers.getDeptoR
  Handlers.getHelloR
  Handlers.getListarR
  Handlers.getMusicaR
  Handlers.getPessoaR
  Handlers.getVertenteR
  Handlers.msc
  Handlers.postAlbumMusR
  Handlers.postAlbumR
  Handlers.postArtistaR
  Handlers.postCadastroR
  Handlers.postDeptoR
  Handlers.postMusicaR
  Handlers.postPessoaR
  Handlers.postVertenteR
  Handlers.vts
module dependencies: Foundation
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-DDov2e1Yemt94DudUvTLYZ
                      aeson-compat-0.3.6@aeson-compat-0.3.6-2DGXsEffmptCnWvZsLNGWu
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-HsZBRE01qJxJ1MwODysbnY
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.9@case-insensitive-1.2.0.9-DO0AWfy7hdR2nQUG46ef58
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      cipher-aes-0.2.11@cipher-aes-0.2.11-3bgwrLYUdx3AMYHUPuxu87
                      clientsession-0.9.1.2@clientsession-0.9.1.2-KRcVaZxQ84gBM2BKF2NUTQ
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cprng-aes-0.6.1@cprng-aes-0.6.1-9Ysh71z5FLmK1QfZUn0KHr
                      crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-2naOMJ2jnvG5GhEt4Ao7bp
                      crypto-random-0.0.9@crypto-random-0.0.9-AoGITFIsDYP2IQzwS9RQF8
                      cryptohash-0.11.9@cryptohash-0.11.9-AwRqZE0EZ5i8pER7MJsLoX
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-DQeBh2BGjiJ2aigRmOz6SM
                      cryptonite-0.21@cryptonite-0.21-47iYBNmsFlII2FZyak8KXj
                      css-text-0.1.2.2@css-text-0.1.2.2-H2nzLAF8Lvh29Ya09mQHei
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5
                      entropy-0.3.7@entropy-0.3.7-GVoReSVE1cZ4Y1pKgzhBYO
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.7@http-api-data-0.3.7-Fjq248miKA8D5hFdZGD7aB
                      http-date-0.0.6.1@http-date-0.0.6.1-DIpeM7nOKwq7aBmb5ryU4N
                      http-types-0.9.1@http-types-0.9.1-AUkzzKpOoLmKIvDSpmjcFz
                      http2-1.6.3@http2-1.6.3-AntBmJg95Sg1Na7lIPgyhO integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      memory-0.14.3@memory-0.14.3-HxN2RgwYLqT3iHrmHIXRUq
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      path-pieces-0.2.1@path-pieces-0.2.1-7jYjtDsNHN0JfYriIYgB3j
                      persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem
                      persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC
                      postgresql-libpq-0.9.3.0@postgresql-libpq-0.9.3.0-FVKnfWO5tn29L1HQjaQ0as
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-7l6cEp6CJ0z95XHG51qnvo
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      securemem-0.1.9@securemem-0.1.9-8Xi2wNoj8BIHAoMFWnW1JR
                      shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-JJ9zm1wZxYIARxlVa3oQgs
                      skein-1.0.9.4@skein-1.0.9.4-1r9hT02ZzU5HeQ9SvXvQV
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-6d5jSu6VuYIIoyQixz5L7u
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-H6cJdoNnPqk1Ch333qtaPo
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-2rsQ1EVge26CO53M4gLdkE
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-3in25hi26fo3ynYVCgt8Z3
                      wai-logger-2.3.0@wai-logger-2.3.0-EYYpHmikC5d8pavu5CHXnD
                      warp-3.2.11.2@warp-3.2.11.2-EncNvviAzZWHK6yVvhIgD5
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-9L4rIyhZC8H6IVBX0SpXFc
                      yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV
                      yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8
                      yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf
                      yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5:Text.Email.Parser
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Bitmap
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Boxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Buildable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Collection
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Element
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Keyed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Mutable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Numerical.Subtractive
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Monad
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ASCII7
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF16
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF32
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.UTF8
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistConfig
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Handler
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Types
                         yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy:Text.Blaze.Html 288dbf097dbd0ff17b50c3c1330477db
import  -/  blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT:Text.Blaze.Internal 52ba665013f4dfa6d731e8584348806e
import  -/  Foundation ca8ea79fef956d4acc4842e380e174ab
  exports: eb25932664807ba10c6cf4bea92c63ce
  AlbumMusR ea4a45554869ab9e8b2e4f2bbfdc1fa3
  AlbumR 26cf4493cf443929188735fcf0e93c5a
  Albuns d6999d55d75476d004bb9562f82c678e
  Albuns cdd4f9d8ae8c63a5d2996ef3f12cc8fe
  AlbunsMusicas 49f86bf8cf29094e56310c1951befbe5
  AlbunsMusicas 21ef787b57491d34dea0219968345f04
  AlbunsNome 927e6a92c55613f58feadf1dc8935509
  ArtistaR 9b17e6705be9d72a3020c837505d2fe2
  Artistas c0a64ca5e0eaa44fd04e0a6b5a6e37d6
  Artistas 136afd221141f114fef24d3028534656
  ArtistasNome ce04aef76a32cb55b36e2aca6c307a34
  CadastroR 15dfe80c9046a9017292660b70831d82
  Departamento 9e0dccc60a3b90fc6c61c9be2b3c1e8a
  Departamento b8e5390eee2b61bc849cfdf16076a03a
  DepartamentoNome 096a4a67f8d2fc6646b9dd150075ef03
  DeptoR 4dcdcf636db1719ce8e5827cee581f3b
  Form c746f9a1651dd8737340f9d476b56474
  Handler 286267252d4c9716536ce0e8d64c4eba
  ListarR 4f3010a15b13ac273bf8a87171196a82
  MsgHello 56b62de683c484b0d5893a6cc524ca72
  MusicaR 34bdf16471ad3840ea7fb3426b5ccec9
  Musicas 62a9a2c9445956101fd5e4bab6238a5b
  Musicas 0ef663d8148c6d76f1c03d9a9ff43a2a
  MusicasNome 21326c761bd2a1792969f1885ae7e138
  Pessoa f00477ade4ac4e8efd1622e0d4b6b69d
  Pessoa 1bb7b06278b226951cdeda893f670f1f
  PessoaId 9ac9d67da7a8a5b1720c75935d19b3a9
  PessoaNome 0f8b6f6d23b08af558ece5051d985621
  PessoaR 2d89c795ea68b00eb7cbbf965742273f
  StaticR 3bed5c1108f33a60d4e4bffd4e93eae0
  VertenteR 6b189838ea62e1959fc736915d22f654
  Vertentes a1c085fe6f199922531b44c1929de103
  Vertentes 2cae7fda0ca761b0a9745430879f0a49
  VertentesNome 04dbcdc6ace88f6daa825d187a5725f5
  albunsNome a68a4e84e21f479b8072e9dc830635b1
  artistasNome 15d6faa89ffd9d46395ed76f25751423
  cadastrosimples_css 8b774c3b2514cee7b10a1456af9dc1ea
  departamentoNome 69ae3915a4be8081ef4219d246a2aba7
  departamentoSigla a45c339e50f726953d306d620cf5a396
  musicasNome 1866d216f2e1891e5d1dbc1aacb17def
  pessoaDeptoid 15b19d0c60fd35232332bceec3b63408
  pessoaIdade 962ae81a38dcd64a244f5cd01f9760e2
  pessoaNome 4e345d7744a07775f565a88fc4accde7
  pessoaSalario 411b7a3a401d185275487c7fe976e68c
  vertentesNome 0dd4f77e5f3166f209a96239c1d3c82a
  widgetForm 38892910231dbfbc25ea4df23921d242
  widgetFormCadastroSimples 31f8266be42e71110d0a99b8804040d2
import  -/  monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger c186132138b23c0e4c9839f4d7247bee
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistEntity 2dfa7e1527d6a9f72c2e7017cee17d47
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistQuery 876fe93620908107224b47244ae2dedc
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistStore a52bd5d94452c0e7428ebf6bdf575274
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql 326569900059893a227843896529734d
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css ae836951711b38c5fd293d4083625473
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Lucius 3f4d62d4427349a5525aed8b7fcba880
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
import  -/  yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV:Yesod 9b32a342acc9baee13df0be07e3d39c5
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Yesod 0f950f5b38ca208030e2bcd8e2a1d8de
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Handler fb74858425a74dc2ac28440095be4990
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Widget 50472288dfa3af7a662f0b4e16cf1eb4
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Fields 65812cd1c1936c49201654803f10a7e1
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Functions 30116c4748d2a9aa9d527802b240f53f
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Types e06b3d57400b5cd8ec2ddccfdae55536
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf:Yesod.Persist.Core 39014f6db198f5fe2002eb686b30660e
addDependentFile "/home/user/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
d0bff2801ec0d0dde89a4a84b67450c6
  $s$WAlbunsNome_$d~~ ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
a4f7ac5f9a2b58d095e58e7fa5eca4f5
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
1b9fb0b9ed37df562f2a704a99907cdc
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta36 :: a)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta36) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
d8aae7366d45a8369a7d2b3034ff7f77
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
5855a25f2d112af3b174ac7ee18fb8e5
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
3faec6322524dddc3bbe70456d22d656
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio) -}
fe0eed2ae4185e337330ea9a5c84c63b
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handlers.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site) -}
58019450207c10e1a530a73d98988a0e
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta36 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta36) -}
2421ad765681d58b38da012bf31bc730
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
45ae4c0a581d892225de9dd67341b1d1
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta36 :: GHC.Types.IO α) ->
                 let {
                   eta37 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta36
                 } in
                 (\ (ds7 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta37)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
e10d5b97f460f2ec519974911eb34444
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
5ecdfa7a1469bbbcbd74661d071b6928
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
68ec4e11a09838193976e3d2a6ddae1c
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fFunctorAForm_$s$fMonadHandlerT -}
c484a81369df10ea17746c4592af209e
  $s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeHandlerT -}
0de912c1d3b3a44b42982b4ba98a9559
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
fe753515d055cfa47183adb3e74f2eab
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
bd7095e38a531873a7842b4959caeec0
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
35d1a4947b2b33db59e190dd672a1dd0
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
e89c5c7f3e491a5cf3c24bb496f2fef8
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta36 :: GHC.Exception.Exception e)
                   (x7 :: e)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta36 x7) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
3fc57680154be05157bd14c14028713a
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
df3a8d5f024ebadcd517cfa777151021
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
fdc5284469d7304442e9a646e1c739e0
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
07babc13437c0830a6aa765b2c964892
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
57287cf4b4b9909d11bfc300b17dbc6d
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebHandlerT -}
0a8e88287bfd991acf62afbde56d2164
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Handlers.$s$fMonadHandlerWidgetT @ site)
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
2149a90223952ea06b2f82f7cb117fcc
  $sdoubleField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Double
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Double
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ GHC.Types.Double
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      Yesod.Form.Fields.doubleField6
                      eta156)
                   (Yesod.Form.Fields.doubleField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
7f824477855db961031debdebde1d64b
  $stextField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.textField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
1df3dc6506ca98bca3910371b822c932
  $stoWidget4 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    GHC.Types.~~ (Yesod.Routes.Class.Route Foundation.Sitio
                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                  -> Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @~ <Yesod.Routes.Class.Route Foundation.Sitio
                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                       -> Data.Text.Internal.Text>_N) -}
e4a5126e72ecc1bb3faec9fdea259a3e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handlers.$trModule2
                   Handlers.$trModule1) -}
492d30345dc715837194b01f4c7b2ead
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handlers"#) -}
ceb9374a275b5be835fffdbec8f828ce
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
05ee4d2579c26cd85466dafba9988366
  abn ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Albuns))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Albuns]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Albuns]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Albuns
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityAlbuns,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Albuns>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendAlbuns[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Albuns))
                          Handlers.abn11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Albuns]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Albuns]>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Albuns)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                         Handlers.abn2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Albuns)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Albuns)>_N)))) -}
4587fa308da02f148268ee6ab7f75c09
  abn10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
f2db897338c98c12e0246a970a0861bc
  abn11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Albuns]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Albuns)
                   Handlers.abn12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Albuns))) -}
e325aaeb08f9c924adc1b425629e0509
  abn12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Albuns
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Albuns
                   @ Data.Text.Internal.Text
                   Handlers.abn13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldAlbunstyp0[0]) <Data.Text.Internal.Text>_N)) -}
e1e3a924175a169c43ef848958c5ee68
  abn13 :: Foundation.R:EntityFieldAlbunstyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.AlbunsNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
0bd6b1873213d271d27e7279ae61fd20
  abn2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Albuns
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Albuns) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds7 ds8 ->
                  case ds8 of wild1 { Foundation.Albuns ds9 ds10 -> ds9 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Albuns
                    ent)) -}
bc2bc1133f3d37cb912ac000682c60a2
  abn9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Albuns,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityAlbuns,
                  Handlers.abn10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
5710f48fd1658e6b7f415419945be526
  art ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Artistas
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityArtistas,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Artistas>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Artistas))
                          Handlers.art11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Artistas]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Artistas]>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                         Handlers.art2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Artistas)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Artistas)>_N)))) -}
70f6749ebb5f0ff82c186a3b7e86d677
  art1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Artistas) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                        Handlers.art3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas]>_N))
                        r
                        s of ds7 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                        Handlers.art2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                   ipv }) -}
72a6f7d5a0c779e1a1bec8b73a98c458
  art10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
22194169319a2282080d446f8b65fec9
  art11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
e60f732ed6025c85e6eb62c521ccc16a
  art12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
da5302c2c1b043557eced2308d4c63be
  art13 ::
    Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
fa3fd425c451fb18532178ec9a6383fc
  art2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Artistas
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Artistas) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds7 ds8 ->
                  case ds8 of wild1 { Foundation.Artistas ds9 -> ds9 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Artistas
                    ent)) -}
20dc91ab2addcce552c6dc7879a4845f
  art3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas)))
                   = Handlers.art4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Artistas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas))>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Artistas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Artistas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Artistas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Artistas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Artistas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Artistas]>_N)))) -}
08415757388625ef6de3d5dca651fc90
  art4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Artistas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.art9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Artistas))
                   Handlers.art5) -}
2bdd1d9e8c7323ee2a533a61bb971cf0
  art5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
5580899fb0da561bdedcd5892c2b9ec0
  art6 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
335e92167bbb4a46bbf372f5713333ff
  art7 :: Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.art8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
eff68bb55b5f0b1a539b849b1c3fd99b
  art8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
6fe595e20e7b97d09de558b78a63485a
  art9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Artistas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityArtistas,
                  Handlers.art10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
bc71dc7a2bcb84706538ff296123a84e
  dptos ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity
                               Foundation.Departamento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Departamento
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityDepartamento,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Departamento>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Departamento))
                          Handlers.dptos11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Departamento]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Departamento]>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Departamento)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                         Handlers.dptos2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Departamento)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Departamento)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Departamento)>_N)))) -}
bc875f37a99abe19418c43abc45b3686
  dptos1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Departamento) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento]
                        Handlers.dptos3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento]>_N))
                        r
                        s of ds7 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Departamento)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                        Handlers.dptos2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Departamento)>_R)
                   ipv }) -}
7210a6e6ab8a648952c7f0d4c4340b7d
  dptos10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
74990b98af4ee9238bd95d2b53454c9f
  dptos11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
08e639ccac4e77caa884f25725698cd7
  dptos12 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
0e1f49af8b0ce90601299fe5436eed0f
  dptos13 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
692418e6df5d23fd9a7842e0e697001a
  dptos2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Departamento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(A,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds7 ds8 ->
                  case ds8 of wild1 { Foundation.Departamento ds9 ds10 -> ds10 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Departamento
                    ent)) -}
61b2f09c5bc9bd8a1d621584f22711c5
  dptos3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Departamento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento)))
                   = Handlers.dptos4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Departamento))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento))>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Departamento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Departamento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Departamento]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Departamento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Departamento]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento]>_N)))) -}
78ff5fdc2ec00cfc84c99a17b703de32
  dptos4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Departamento)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Departamento
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.dptos9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Departamento))
                   Handlers.dptos5) -}
abbc6811be900f2c05524e2c1180d761
  dptos5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
06add87863c9e72d73fb3b546cd0bfd3
  dptos6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
5e8c7bb6882a466bff10fa4d0be30675
  dptos7 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.dptos8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
8539a1a0de7eebf588f50fd7fde54664
  dptos8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
08bc0bf90442ecdd97168dfe1ba3af3e
  dptos9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.dptos10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
032a44264388dff7650614882dd64a7a
  formAlbuns :: Foundation.Form Foundation.Albuns
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formAlbuns1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
946f6d9475a475c02b1201c5e70a4343
  formAlbuns1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Albuns,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Albuns
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formAlbuns2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Albuns>_N))
                   eta105
                   eta106
                   eta107) -}
315d91e382e5161f8492d4930dc78336
  formAlbuns10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns11) -}
ef1c599a422aa94b0bbd52b7ab41e1f7
  formAlbuns11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formAlbuns12 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
1af79c67c66235d8160162acab3ce530
  formAlbuns12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formAlbuns13
                   0#
                   ipv }) -}
0fac9a0de273da1541fb1db3f42ef536
  formAlbuns13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
17456ecf3ad3f629f9476f3af6a547b7
  formAlbuns2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Albuns,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formAlbuns_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds9 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Albuns errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Albuns
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Albuns
                                  (Foundation.$WAlbuns a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
fecfcee81f8d3a32075328c51fd46762
  formAlbuns3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
9efac7da4765236b53f81c60cd8e2680
  formAlbuns4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns5) -}
73025a54e3492e464011afb1386d3363
  formAlbuns5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formAlbuns6
                           0#
                           ipv }) of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
088b25c894a2a9d610fb1ea5af3ead95
  formAlbuns6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Artista principal: "#) -}
8e3bf3fd88ac1150236a647bd3f45463
  formAlbuns7 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Handlers.formAlbuns8
                   Handlers.art1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Artistas)>_R))
                        (Sym (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Artistas)>_N)))) -}
73f8c948a901f6dc6eee4d2227086820
  formAlbuns8 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   @ Foundation.Sitio
                   Foundation.$fEqKey8
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
9bfefa62deeb03f89c17374422b30add
  formAlbuns9 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
762a5ba7166c559850c658262776c129
  formAlbunsMusicas :: Foundation.Form Foundation.AlbunsMusicas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formAlbunsMusicas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
39c4d3e0a369836ce3cf877e81a54d77
  formAlbunsMusicas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.AlbunsMusicas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formAlbunsMusicas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.AlbunsMusicas>_N))
                   eta105
                   eta106
                   eta107) -}
6b0e4580d489def69a105a524b9fdf3e
  formAlbunsMusicas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
d0d06a774a763dc7e7be3355f6aec94a
  formAlbuns_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formAlbuns9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
5e7f60f210308bf6b919e0b7d8125bf1
  formAlbuns_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns7
                   Handlers.formAlbuns3
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Artistas))) -}
4e17a4c48e58925f37358627c690ba4f
  formArtistas :: Foundation.Form Foundation.Artistas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formArtistas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
2fd23b4576672952356ceb667a39986a
  formArtistas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Artistas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formArtistas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Artistas>_N))
                   eta105
                   eta106
                   eta107) -}
d01e41d7f1ed93e026e8b8154a26ddce
  formArtistas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Artistas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta36 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta37 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta38 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta36
                       eta37
                       eta38
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x7 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Artistas
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Artistas errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Artistas
                             (case a1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Artistas dt }) },
                      x7, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
52b4194a95f515495c55799d653ded89
  formDepto :: Foundation.Form Foundation.Departamento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDepto1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
d7dfe4345e90f7e5669945c6578971ff
  formDepto1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Departamento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formDepto2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Departamento>_N))
                   eta105
                   eta106
                   eta107) -}
6c17557209c145c423e5280955449595
  formDepto10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto11) -}
1e7d49e4d0eb629c4eb55ed127013abc
  formDepto11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formDepto12
                           0#
                           ipv }) of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
ca6cdf1f41355d533724b9919a319973
  formDepto12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sigla"#) -}
1761c0b348f2c6a170cfb3172c0eb4e5
  formDepto13 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto14
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1e20550c0bb14cda1e273907849f79f6
  formDepto14 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto15) -}
79cae0113b6288dc37c3271ec4e42ccc
  formDepto15 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formDepto16 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
2992ee0bcdee4c1ca3e64bf9a33d87bb
  formDepto16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDepto17
                   0#
                   ipv }) -}
fbd0a237979aa24b4c5ccf277fc7924a
  formDepto17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome"#) -}
cc400dcb2c52eb9728ff11eadcaa5336
  formDepto2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Departamento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formDepto_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formDepto_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Data.Text.Internal.Text>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds9 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Departamento
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Departamento
                                  (Foundation.$WDepartamento a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
9ad14db911a7001cce67c968728af079
  formDepto3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   Handlers.formDepto8
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formDepto4) -}
f0d719b1a483d64583d406cb1a21e90e
  formDepto4 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formDepto5
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
162b50ea0b0ad7b6c9750db52d95ec04
  formDepto5 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formDepto7, Handlers.formDepto6)) -}
a38a20acc51a79d9b0eed9ecab4c995c
  formDepto6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "3"#) -}
00cc82982b0976e3b4f5bd404c54a833
  formDepto7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
19c01efa76c9010629a59bb5f3373777
  formDepto8 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formDepto9) -}
ebf659680d4848d410a351ba3d95e5ad
  formDepto9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
9d751f12ca807e4df030255e414aca78
  formDepto_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto13
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
5a0b4415c89b6c09138387dc5bcf2513
  formDepto_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
f741a7a3d74047aa168003726c6bf62a
  formMusicas :: Foundation.Form Foundation.Musicas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formMusicas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
570dde76dddc2dd98a270cf3a5219d80
  formMusicas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Musicas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Musicas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formMusicas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Musicas>_N))
                   eta105
                   eta106
                   eta107) -}
2670a2813337bbbb866a5ffa25a2ccd6
  formMusicas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Musicas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formAlbuns_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds9 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Musicas
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Musicas y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Musicas errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Musicas
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Musicas
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Musicas y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Musicas
                                  (Foundation.$WMusicas a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Musicas,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Musicas,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
fd165b464acaeb6b7d45906ebc1c1457
  formPessoa :: Foundation.Form Foundation.Pessoa
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
ea2727523bfb6c268aec0b6b5132d579
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Pessoa,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Pessoa>_N))
                   eta105
                   eta106
                   eta107) -}
f60316b434b1d7cdcde43ab039e38f8d
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoa,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
d9ab26a4852ce9abefc6f81156343bb9
  formVertentes :: Foundation.Form Foundation.Vertentes
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formVertentes1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
235d26e4cda8695838c7cf4a13664608
  formVertentes1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Vertentes,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vertentes
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formVertentes2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Vertentes>_N))
                   eta105
                   eta106
                   eta107) -}
29e62bbfc8752a6d810e5fd414dc5a57
  formVertentes10 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes)))
                   = Handlers.formVertentes11
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Vertentes))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes))>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Vertentes]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Vertentes)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Vertentes]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Vertentes]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Vertentes]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vertentes]>_N)))) -}
d13d42b8ec418d6e53463c6367ad4dc5
  formVertentes11 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Vertentes)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Vertentes
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.formVertentes16
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Vertentes))
                   Handlers.formVertentes12) -}
9c434ce639525b5e0f2e25f661cb4e89
  formVertentes12 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.formVertentes13
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
290563b7558546ff38775cf0bad83443
  formVertentes13 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.formVertentes14
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
3e5ecc8282bdaff7e460db60f445045c
  formVertentes14 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.formVertentes15
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
88866fe9a611772dfd8c44deaac5d942
  formVertentes15 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
ebd664876847e78610e12558abd1729b
  formVertentes16 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.formVertentes17
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
30008f89b2aae20d31e7e807748cb9bd
  formVertentes17 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
5267faf6b67af4c560931f813389d303
  formVertentes18 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                   @ Foundation.Sitio
                   Foundation.$fEqKey7
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
dd9b1f2952c0ab44d914480041ff0fb5
  formVertentes2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Vertentes,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formVertentes_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Vertentes>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds9 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Vertentes
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Vertentes
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Vertentes
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Vertentes
                                  (Foundation.$WVertentes a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
9cf40740387122bb7cbbd48706f71a3b
  formVertentes3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formVertentes4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
dac4231ca9de887dd4589e958103d893
  formVertentes4 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formVertentes5) -}
92518718dc3867ade97113d4fd44fb38
  formVertentes5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formVertentes6
                           0#
                           ipv }) of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c1cf6f5eb25357f0587bc92ed165710d
  formVertentes6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Vertente M\\195\\163e: "#) -}
b7a09162736e7c5b86bf0a7d2bd323fa
  formVertentes7 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Handlers.formVertentes18
                   Handlers.formVertentes8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Vertentes)>_R))
                        (Sym (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Vertentes)>_N)))) -}
41ab9a08b64e5c2b1ae1b29fb04726cb
  formVertentes8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes]
                        Handlers.formVertentes10
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes]>_N))
                        r
                        s of ds7 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                        Handlers.formVertentes9
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                   ipv }) -}
ace9f7a552069fd2b3c7f4f766c42d84
  formVertentes9 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds7 ds8 ->
                  case ds8 of wild1 { Foundation.Vertentes ds9 ds10 -> ds9 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Vertentes
                    ent)) -}
8d3da47bca9fe771b98c76bd66e90526
  formVertentes_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes7
                   Handlers.formVertentes3
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Vertentes))) -}
6beb24003f9459f31a7b57b81298e16a
  getAlbumMusR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getAlbumMusR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
3f136c3fd45a17b91f3d1a72622351ab
  getAlbumMusR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getAlbumMusR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.AlbumMusR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getAlbumMusR4
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl112
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
8fd9850c6d7d48bb0693ffa091236647
  getAlbumMusR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getAlbumMusR3 eta37) -}
0303e7da9241407ded1f08cfa8be3ebd
  getAlbumMusR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.cadastrosimples_css1
                                     `cast`
                                   (Sym (Yesod.Static.D:R:RouteStatic0[0])))
                                  `cast`
                                (Trans
                                     (Sym (Foundation.D:R:RouteSitio0[0]))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))) #)) -}
a2f6a54d22e994b212427fe0cd211505
  getAlbumMusR4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Novo \\195\\161lbum"#) -}
fe2aeef2d7ca7f3821625d1aaf46c477
  getAlbumMusR5 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.AlbunsMusicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbunsMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
98f856800171803d5e8a189ea4e1e8a7
  getAlbumR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getAlbumR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
be2d90a0579d060a8a70296187cba801
  getAlbumR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getAlbumR2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.AlbumR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getAlbumMusR4
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl112
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
561539544751e5ad23a99230f2d46258
  getAlbumR2 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Albuns
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ecfc06cf820c7ed27906529452127db0
  getArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getArtistaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
9e3d694875b45d2df2aeab4e04fd1789
  getArtistaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getArtistaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.ArtistaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getArtistaR2
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl112
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
d88550bbce22cd79226c1508b0ac8a8b
  getArtistaR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Novo artista"#) -}
a5609bc14bbac57fe12424bd69c33dd0
  getArtistaR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formArtistas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
6b6f0f7e7d208517e466b305d0cb7621
  getCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
777c71768ed95e56021268d100d8c059
  getCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getCadastroR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.CadastroR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getCadastroR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
e8e1990762d4569113fb7e8d69dcc1d0
  getCadastroR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Pessoas"#) -}
a4eac5dfd9749ca628f6716822b2eb81
  getCadastroR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
7f0be3ddfb332e1a566f471fae3d3b23
  getDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
fca21e2b9c886e9e0978a39f81800c8c
  getDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getDeptoR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getDeptoR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
94eda26cb7b150e9c22156b9ecbe3960
  getDeptoR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Departamentos"#) -}
6af77f33ee43c1cd0b9872b5be521229
  getDeptoR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
643758fcfd9ebd861a8bc2840035e473
  getHelloR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getHelloR1
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
13cba517fd64e3740c1da70254b1f095
  getHelloR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR14
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHelloR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta36) -}
042a1180802cf209b2736883b36f3797
  getHelloR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   @ ()
                   Handlers.getHelloR12
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N))
                   Handlers.getHelloR11) -}
7b0f5d157d21706573c7e3cfec317843
  getHelloR11 ::
    (Foundation.SitioMessage -> Text.Blaze.Html.Html)
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (urender :: Foundation.SitioMessage -> Text.Blaze.Html.Html) ->
                 let {
                   eta36 :: Text.Blaze.Html.Html = urender Foundation.MsgHello
                 } in
                 (\ (eta37 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta38,
                     (GHC.Tuple.(),
                      (Yesod.Core.Types.GWData
                         @ (Yesod.Routes.Class.Route Foundation.Sitio)
                         (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                                    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                    -> Data.Text.Internal.Text) ->
                          eta36)
                           `cast`
                         (Sym (Yesod.Core.Types.N:Body[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                         (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                           `cast`
                         (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Script
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Stylesheet
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (Data.Map.Base.Tip
                            @ (GHC.Base.Maybe Data.Text.Internal.Text)
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Data.Text.Internal.Builder.Builder))
                         (GHC.Base.Nothing
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Text.Julius.Javascript))
                         (Yesod.Core.Types.$fApplicativeWidgetT2
                            @ (Yesod.Routes.Class.Route Foundation.Sitio))
                           `cast`
                         (Sym (Yesod.Core.Types.N:Head[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
47d7b8019193bedb91342b9cb009c0a7
  getHelloR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         (Foundation.SitioMessage -> Text.Blaze.Html.Html,
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Data.Text.Internal.Text)
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   Handlers.getHelloR_m1
                   Handlers.getHelloR13
                     `cast`
                   (<Foundation.SitioMessage -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <(Foundation.SitioMessage -> Text.Blaze.Html.Html,
                                              Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route Foundation.Sitio))>_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N
                                       <GHC.Types.IO>_N
                                       <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N)))
                   eta36) -}
a08b00b57207d4eaa5e0f1d716996a69
  getHelloR13 ::
    (Foundation.SitioMessage -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Foundation.SitioMessage -> Text.Blaze.Html.Html,
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (x7 :: Foundation.SitioMessage
                          -> Data.Text.Internal.Text)
                   (ds7 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio
                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (\ (x8 :: Foundation.SitioMessage) ->
                     Text.Blaze.Internal.Content
                       @ ()
                       (Text.Blaze.Internal.Text (x7 x8)),
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)) #)) -}
a513b8261c5b17958ecf729c9ea72be2
  getHelloR14 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getHelloR15 eta37) -}
60ef969d54f825ac4818811a25a32330
  getHelloR15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Handlers.getHelloR16 #)) -}
be2d99e9c70336ab778d91de9cd65b03
  getHelloR16 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHelloR17
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
0edb266f60da2b4e8a1896325fee3a49
  getHelloR17 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getHelloR18
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
376653c017b49f3ff8f64085c6f0f938
  getHelloR18 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.getHelloR_eta1) -}
418fcbea26e50ac5b54790924488f8b7
  getHelloR19 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHelloR20) -}
9407474bcee2e9055af3b32c994f3cc8
  getHelloR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ (ds7 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR10
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHelloR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta36) -}
48bfe04c0058ee21cf99945e1bb849c0
  getHelloR20 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHelloR21) -}
3d1640fa9e310ec83655ede4ace3920a
  getHelloR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> "#) -}
52524ada73d000048fc90c5be5652f57
  getHelloR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds7 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.getHelloR4 #)) -}
b92ff9b5a1eaa2b1f5013d80a41a4830
  getHelloR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHelloR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
f09f95afcd04c3727654a0d097571ff3
  getHelloR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getHelloR6
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
a3c89e00d3b2bd02a3dee23fa0327104
  getHelloR6 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.getHelloR_eta) -}
3e6406ce8de81e146c613d480cb3de78
  getHelloR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHelloR8) -}
97802bc5a227fc5acf6379a62a50a88c
  getHelloR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHelloR9) -}
71a34106ea9545b88bbc1ef227403efe
  getHelloR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
aa229ba5396716253ada4bc4f8c19141
  getHelloR_eta :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHelloR7) -}
419713c994a35ef7263df680e5011d64
  getHelloR_eta1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHelloR19) -}
48a45c99a121d61b73d38329ba0485d8
  getHelloR_m1 ::
    Yesod.Core.Types.WidgetT
      Foundation.Sitio
      GHC.Types.IO
      (Foundation.SitioMessage -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getMessageRender
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.SitioMessage
                   (Handlers.$s$fMonadHandlerWidgetT @ Foundation.Sitio)
                   Foundation.$fRenderMessageSitioSitioMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Foundation.SitioMessage>_N))) -}
b899bc66681860a8953d8cf165c66175
  getListarR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListarR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2a618a28775eacaf721b3b9057dbc606
  getListarR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                        Handlers.getListarR40
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa]>_N))
                        r
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                     {- Arity: 3 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                       (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     Handlers.getListarR39 ipv1 eta36 eta37
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getListarR34
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl112
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <((),
                                                       Yesod.Core.Types.GWData
                                                         (Yesod.Routes.Class.Route
                                                            Foundation.Sitio))>_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta36
                      } in
                      (\ (eta36 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         m2
                           `cast`
                         (Sym (Yesod.Core.Types.N:WidgetT[0]
                                   <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         Handlers.getListarR2
                         eta36)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
a1dead5bb0ffe9ee2f9bfb12b0d58cee
  getListarR10 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR17
                   Handlers.getListarR11) -}
fa3154592f5276e9b0f3802aca31ee7d
  getListarR11 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR12
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
d6b59a2f85c8369d37fbd69fcb0565a7
  getListarR12 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR15
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR13
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
6411e16677439fd0a271b3275466a9a2
  getListarR13 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR14)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
3f9e21845b7848a96d935571f2ab91d0
  getListarR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "0"#) -}
d409740e86021410994fa513e95dc129
  getListarR15 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR16)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
0bd815f3aa9835fb5487f64d14d1e2ba
  getListarR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "border"#) -}
c88989f17532bb92e2c55205a711bb90
  getListarR17 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR20
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR18
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
a0cc08bd376c820ea1454d53e2fd08b6
  getListarR18 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR19)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
f9832d9a7bd16bf0634a05324f051911
  getListarR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#ecc"#) -}
7a63abeb251774d8ef2bd9a02d29934e
  getListarR2 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, Unfolding: (\ (ds7 :: ()) -> Handlers.getListarR3) -}
e4d79cc16b8254f42a5268fddd7048ee
  getListarR20 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR21)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
d5b3c33d43f89c9073e03e60cf2753b7
  getListarR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "background-color"#) -}
453c4720792bd43d9dc597e2a71b4418
  getListarR22 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR23)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
24fedf17cdf9a91e6be464b7280a04af
  getListarR23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "input"#) -}
9bd59651ea694f5676187c028451f2fd
  getListarR24 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR25) -}
aedc382a13e2bcf7c85056d260763218
  getListarR25 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR32
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getListarR26
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
b39d2b780251c7c648621aa171d6d4a5
  getListarR26 :: [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getListarR27
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
352affb964b0fca0fb87a6079c158820
  getListarR27 :: Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR30
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getListarR28
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
18e4f9398b444343972c8045c984dea7
  getListarR28 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR29)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
18743b29a605f5cbdea079ff712bc9d5
  getListarR29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "inline"#) -}
40e8d79c46896424c567f9f3d9b2e003
  getListarR3 ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.Sitio
                   Handlers.$stoWidget4
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.Sitio
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.Sitio
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   (Handlers.$s$fMonadWidgetWidgetT @ Foundation.Sitio)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   Handlers.getListarR4) -}
c86251eb43005179d1f2ac1c840ea5eb
  getListarR30 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR31)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
a81e868a97f5d608b00cf53760cbc7a8
  getListarR31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "display"#) -}
39c70081642cc8925d752489d0d0c392
  getListarR32 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getListarR33)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
3af747250f2d4592c778fe84ece08e4f
  getListarR33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "form"#) -}
6fd19c5accfc163c275c0f5aecbb09a6
  getListarR34 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getListarR35 eta37) -}
d4b519914c6d5a2a511fceaf641700fe
  getListarR35 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getListarR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
ccb703fc4c883738aea00d21fbe7e230
  getListarR36 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getListarR37) -}
7fabbcf8df09a8748bfe63958931ca81
  getListarR37 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getListarR38) -}
5dde1669fe75bb4d245dc1c06e0171f4
  getListarR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Pessoas cadastradas:</h1>\n"#) -}
054ae079bf7f3961e395b8f689b44853
  getListarR39 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
2fc098398e9bc9dbca36bb20c6667bdb
  getListarR4 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Internal.Css.Css
  {- Arity: 1,
     Unfolding: (\ (_render :: Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 Handlers.getListarR5) -}
fa02297a5ee38c6d47fbaa7f49b76a52
  getListarR40 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
                   = Handlers.getListarR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Pessoa))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Pessoa))>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Pessoa)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Pessoa]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Pessoa]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Pessoa]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Pessoa]>_N)))) -}
7099b32a42c87231b688b748bfeff963
  getListarR41 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Pessoa)
                   Handlers.getListarR42
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Pessoa))) -}
2de9311e1e7e908ee8737ccf8a0e1c0d
  getListarR42 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Pessoa
                   @ Data.Text.Internal.Text
                   Handlers.getListarR43
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldPessoatyp0[0]) <Data.Text.Internal.Text>_N)) -}
bf779270ff8ae1126fb8f649fa36b40f
  getListarR43 ::
    Foundation.R:EntityFieldPessoatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.PessoaNome
                   @ Data.Text.Internal.Text
                   Handlers.getListarR44
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
8b73efae70c6fdc98a4350556f40b4a1
  getListarR44 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
91d84fdeb467fc3556325b31048a50ad
  getListarR45 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Pessoa,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityPessoa,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
2598ee9beea50e5c1f334e5152b8ca84
  getListarR46 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
82dd3e8909f58457557df62b6e54f53f
  getListarR5 :: Text.Internal.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Internal.Css.CssNoWhitespace
                   Handlers.getListarR6) -}
fe7af6e32e811ba3e35410b0da8c88f2
  getListarR6 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getListarR24
                   Handlers.getListarR7) -}
fa01e73c6e3e6b07bf6fd1bc79b70346
  getListarR7 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getListarR8
                   (GHC.Types.[]
                      @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved))) -}
3327d6f54ffb6a29ab345fda7e710321
  getListarR8 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR9) -}
e636e66994ca1082850f0210648a367d
  getListarR9 :: Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getListarR22
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getListarR10
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
3eae55c70a8a752ab6be24ee4f00a331
  getListarR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getListarR36) -}
d53a115e7828a480d6b6566453f3c5e6
  getListarR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Pessoa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.getListarR45
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Pessoa))
                   Handlers.getListarR41) -}
4b37f9a5a7689a4662a8464fbc662842
  getMusicaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getMusicaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
650203ea0afd9d1545b5acfef987b70f
  getMusicaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getMusicaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.MusicaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getMusicaR2
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl112
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
8b00ca1c899a9003c4e327c23b0692b3
  getMusicaR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Nova m\\195\\186sica"#) -}
50d977bf75486fb5548b9a790589d1e9
  getMusicaR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Musicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ef38913c1aa75b3c8e23eed5b6b76821
  getPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
145112cf1d1f96dcd3109d20851eb448
  getVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
d0cec6b3e0afe72bc304e3b00ac61948
  getVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getVertenteR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl112 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds8 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.VertenteR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getVertenteR2
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl112
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
82e663b4e801d34fb7fe9eb7e865264d
  getVertenteR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Nova vertente"#) -}
9e7e08525cc9454acee54d383fad5e4e
  getVertenteR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
9fd2e2fbb55d2606521fe969f443fc12
  msc ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Musicas
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityMusicas,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Musicas>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Musicas))
                          Handlers.msc11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Musicas]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Musicas]>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                         Handlers.msc2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Musicas)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Musicas)>_N)))) -}
fc65f3f487a17de0a0e9fba0d0936c2f
  msc1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Musicas) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                        Handlers.msc3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Musicas]>_N))
                        r
                        s of ds7 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                        Handlers.msc2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_R)
                   ipv }) -}
ee336bac73455945e8f22c2d16492ba9
  msc10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
b71d571590a6d1efbdb3e6e6ed3af022
  msc11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Musicas)
                   Handlers.msc12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Musicas))) -}
fa5b5fcc198a302c36da72230acfe03d
  msc12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Musicas
                   @ Data.Text.Internal.Text
                   Handlers.msc13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldMusicastyp0[0]) <Data.Text.Internal.Text>_N)) -}
c20614774eb5f364025dfd193cdde1f7
  msc13 :: Foundation.R:EntityFieldMusicastyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.MusicasNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
2ffad2cb2bad9a6d826b1b7bd9bbb6cc
  msc2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Musicas
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Musicas) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds7 ds8 ->
                  case ds8 of wild1 { Foundation.Musicas ds9 ds10 -> ds9 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Musicas
                    ent)) -}
040c77a902da5aca9f86f5d119fc6abc
  msc3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)))
                   = Handlers.msc4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Musicas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Musicas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Musicas))>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Musicas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Musicas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Musicas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Musicas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Musicas]>_N)))) -}
9dcd72635ffde90301feaf94c99d5ea9
  msc4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Musicas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.msc9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Musicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Musicas))
                   Handlers.msc5) -}
2af34fd477e2c37a39d2d98e323a9c02
  msc5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Musicas)
                   Handlers.msc6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Musicas))) -}
a1df15bf9a220fce6782ddcf739cf777
  msc6 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Musicas
                   @ Data.Text.Internal.Text
                   Handlers.msc7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldMusicastyp0[0]) <Data.Text.Internal.Text>_N)) -}
46d56c5e6c4df9fcb82a4bfb2b23be1b
  msc7 :: Foundation.R:EntityFieldMusicastyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.MusicasNome
                   @ Data.Text.Internal.Text
                   Handlers.msc8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
c0d4ff20e0d4678c371dd656dcfb0dfd
  msc8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
ee7373d7bb3a49ff21b455cc58e009d8
  msc9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Musicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityMusicas,
                  Handlers.msc10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
01ba93b2787bfc8b8ddbf97d43228f56
  postAlbumMusR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postAlbumMusR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
7c04f1075e161eee9c80e95debb35160
  postAlbumMusR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postAlbumMusR13
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postAlbumMusR12
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess albummsc
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.AlbunsMusicas)
                             (Handlers.postAlbumMusR10 albummsc)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.AlbunsMusicas>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      (Handlers.postAlbumMusR2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
c6bb98f56fe8f80cb56e6f8c843c02a6
  postAlbumMusR10 ::
    Foundation.AlbunsMusicas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.AlbunsMusicas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.AlbunsMusicas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postAlbumMusR11
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.AlbunsMusicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAlbunsMusicas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
0bb6450e9e6fda673917299a8e2e6631
  postAlbumMusR11 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.AlbunsMusicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityAlbunsMusicas,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
7f1256822ab3f8d3fc7a566970a87d20
  postAlbumMusR12 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.AlbumMusR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
482edceca1387f75b9e4f036ed31d453
  postAlbumMusR13 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.AlbunsMusicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbunsMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
d6b64215563e51377a98f4909287b0f8
  postAlbumMusR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.postAlbumMusR3
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
37101e3123fcd4d27a5a64d9459b53eb
  postAlbumMusR3 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postAlbumMusR4 #)) -}
e835eac94d6bbdd08e115621bc1d8857
  postAlbumMusR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postAlbumMusR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
ff2acac679e5242b4a960a4f3f26ea2d
  postAlbumMusR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postAlbumMusR6
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
f4e81e71a8f13b6d92883b92d3129a71
  postAlbumMusR6 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postAlbumMusR_eta) -}
eadb9dba5d338cd707af4aec747c5ef8
  postAlbumMusR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postAlbumMusR8) -}
85633b8567f79cafecacd482d397d29d
  postAlbumMusR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.postAlbumMusR9) -}
422882b721ffe715fa983839ea588f00
  postAlbumMusR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Inserido com sucesso. </h1>\n"#) -}
690946b81c27b1027117b4eaf93a78a2
  postAlbumMusR_eta :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postAlbumMusR7) -}
738109f7c12c29335bffe042df5ce294
  postAlbumR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postAlbumR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
8481603c854e503b9a0866ef45a568ce
  postAlbumR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postAlbumR12
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Albuns,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Albuns,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postAlbumR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess album
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                             (Handlers.postAlbumR9 album)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Albuns>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case album of wild3 { Foundation.Albuns ds12 ds13 -> ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
d3d2995f4e16844e396a62461fd70b78
  postAlbumR10 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Albuns,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityAlbuns,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
0f1f66a95c090e9c32264dc0da6169b9
  postAlbumR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.AlbumR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
b7f0d2c4c9a2b988d6199760bff1258d
  postAlbumR12 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Albuns,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Albuns
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ca1cd4bc8b1fe72b5636254d2ef75488
  postAlbumR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds7 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postAlbumR3 #)) -}
15a4bb6dab90b233281096bdc5bfca07
  postAlbumR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postAlbumR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
62a97b935d7ac3f9eb79c92072ba7e04
  postAlbumR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postAlbumR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
a4e6813344085b64a80fb1e758aabde0
  postAlbumR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postAlbumR_eta) -}
2f42085958a7767520984e04c544475b
  postAlbumR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.postAlbumR7) -}
8b23bb3458fff7e7ccb5c22a8d1d35d3
  postAlbumR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postAlbumR8) -}
ec5ec9dd512dbdb5f471d6e01e8c95ba
  postAlbumR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inserido com sucesso. </h1>\n"#) -}
69a31ca85ee44b6f14563464bc94c10a
  postAlbumR9 ::
    Foundation.Albuns
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Albuns
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postAlbumR10
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Albuns>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAlbuns[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
c6cb0554b3fbfe41c82a57a5b387c1dd
  postAlbumR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postAlbumR6) -}
f80822159285f50033abb2c027a48a57
  postArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postArtistaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
1fb38b9dfde2663778d6f87787be78fa
  postArtistaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postArtistaR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Artistas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Artistas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postArtistaR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess artista
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                             (Handlers.postArtistaR2 artista)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case artista of wild3 { Foundation.Artistas ds12 -> ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
c58174cdb28369bcc85e53e1b1a78a83
  postArtistaR2 ::
    Foundation.Artistas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Artistas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postArtistaR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
6c8ee8a77225040e44fc19757f2f3e31
  postArtistaR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Artistas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityArtistas,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
2ae509e3e44bf4855a230ed96faa0e8b
  postArtistaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ArtistaR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
cec1325506049b346320185648602586
  postArtistaR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Artistas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formArtistas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
fca2cd65882e4359db71274fca6b1bb6
  postCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
6daacfc5b467ace58d5816ffa215493b
  postCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postCadastroR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadastroR10
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
                             (Handlers.postCadastroR9 pessoa)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Pessoa>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case pessoa of wild3 { Foundation.Pessoa ds12 dt dt1 ds13 ->
                                   ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postCadastroR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
3fbfd542f904b08ec7333c65dbdf6297
  postCadastroR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.CadastroR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
557682a0429bdddf6757e9f823f90419
  postCadastroR11 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Pessoa,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
34ec267a022a861a3afd00ae953ed74b
  postCadastroR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds7 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postCadastroR3 #)) -}
5f72695ee1d96ea44270774a6c231490
  postCadastroR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postCadastroR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
124be732c57ee7f2b30e44f49983f312
  postCadastroR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postCadastroR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
c42068dc558ed01d1b7f640aae29b4cb
  postCadastroR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds7 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postCadastroR_eta) -}
0f62ec34b30a0698e356f2ecd36f02b6
  postCadastroR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postCadastroR7) -}
23ae368bfb37eb380f90254ea5edcfde
  postCadastroR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postCadastroR8) -}
87d69d0c37dff6093fe0adba82201977
  postCadastroR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inseridx com sucesso. </h1>\n"#) -}
38bfbffc2319f07d6398987863b8961b
  postCadastroR9 ::
    Foundation.Pessoa
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getListarR45
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
ab885329880b5a9881890cf82b7bb67c
  postCadastroR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postCadastroR6) -}
5ce9a9ce03a6bce48f64ec07c5811cfd
  postDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
90b7b1814aa08e9d722665dfdcbe7964
  postDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postDeptoR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Departamento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Departamento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postDeptoR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess depto
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Departamento)
                             (Handlers.postDeptoR2 depto)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Departamento>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case depto of wild3 { Foundation.Departamento ds12 ds13 -> ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
61874c4ea159e09728941519dd61de28
  postDeptoR2 ::
    Foundation.Departamento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Departamento
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postDeptoR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
0d711702a54f056634ba68ade45bd129
  postDeptoR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
6be289ac71ed498c4fb9b4074f79c6ad
  postDeptoR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
8b79c7da179a7fc4ed5ee08d4c217124
  postDeptoR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Departamento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
37e754c09c74dbf3032de2700efeeec8
  postMusicaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postMusicaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
e1889691f17baaa524b4bd4923be6c8a
  postMusicaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postMusicaR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Musicas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Musicas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postMusicaR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess musica
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                             (Handlers.postMusicaR2 musica)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Musicas>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case musica of wild3 { Foundation.Musicas ds12 ds13 -> ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
ad14a2e9c8ffcc3f80eafb33a4055518
  postMusicaR2 ::
    Foundation.Musicas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Musicas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postMusicaR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Musicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
1a9038c8a991724a0b755fa67773d941
  postMusicaR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Musicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityMusicas,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
b373f0cdbaa3be12f6220f57712b389a
  postMusicaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.MusicaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
24e78489a7cd91d08796a15714fbb2d6
  postMusicaR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Musicas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Musicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
0a2d431e165db29815baf3654a91f244
  postPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (pid :: Foundation.PessoaId) ->
                 let {
                   m2 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           ()
                   = Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                       @ Foundation.Pessoa
                       (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.Sitio)
                       Handlers.getListarR45
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Pessoa>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       pid
                 } in
                 (\ (eta36 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ ()
                         m2
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <()>_N)_R
                         eta36
                         s of ds7 { (#,#) ipv ipv1 ->
                  (Handlers.postPessoaR1
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     eta36)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
9c7cb2b1d86ad925c59a8b4251e9868d
  postPessoaR1 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ListarR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
0d8b44571af7d8fafb46c6f907818cb9
  postVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
6403c669bce149f49f7ca90ce49ad61c
  postVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postVertenteR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds8 ds9 ->
                 case ds8 of wild1 { (,) result ds10 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postVertenteR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess vertente
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                             (Handlers.postVertenteR2 vertente)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Vertentes>_N)_R
                             r
                             ipv of ds11 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case vertente of wild3 { Foundation.Vertentes ds12 ds13 -> ds12 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds12 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl112 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds12 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR14
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl112
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
34a20ca0c4adb2141739773c1d0bc703
  postVertenteR2 ::
    Foundation.Vertentes
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vertentes
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postVertenteR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
a6d5bcbaa0b9356977c90b8187ae939f
  postVertenteR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.getListarR46
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
5d3a2089abb14899cc6568536dd75b74
  postVertenteR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.VertenteR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
90f5b59fc6aa293ae9452b32b6c83e21
  postVertenteR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Vertentes,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
c49b8406f334dc546b3a063306c8a864
  vts ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds7 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Vertentes
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityVertentes,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Vertentes>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Vertentes))
                          Handlers.vts1)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds7
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Vertentes]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Vertentes]>_R)
                         s of ds8 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Vertentes)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                         Handlers.formVertentes9
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Vertentes)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Vertentes)>_N)))) -}
208ef1f5a2893fb4b371d5c2ea2c8b18
  vts1 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.vts2
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
24f17ec4e533c876935f7a32d95058a7
  vts2 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.vts3
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
9304479ab585bcb544de96ffa8cafb03
  vts3 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
"SPEC/Handlers $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                             ($dMonad :: GHC.Base.Monad
                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handlers.$s$fApplicativeHandlerT @ site
"SPEC/Handlers $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handlers.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handlers $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handlers $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                               GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handlers.$s$fMonadHandlerHandlerT @ site
"SPEC/Handlers $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handlers $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Handlers $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                             ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                              GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handlers.$s$fMonadHandlerWidgetT @ site
"SPEC/Handlers $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handlers $fMonadIOHandlerT_$cp1MonadLogger @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cp1MonadLogger @ GHC.Types.IO
                                                     @ site
                                                     $dMonadIO
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
      @ site
"SPEC/Handlers $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                  GHC.Types.IO)
                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                 GHC.Types.IO
                                                                                 GHC.Types.IO)
                                                               ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp3MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp3MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handlers $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handlers $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                     ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handlers $fMonadWidgetWidgetT @ IO _" [ALWAYS] forall @ site
                                                            ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ GHC.Types.IO
                                                @ site
                                                $d(%,,,,%)
  = Handlers.$s$fMonadWidgetWidgetT @ site
"SPEC/Handlers doubleField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                        (Yesod.Core.Class.Handler.HandlerSite
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.Sitio
                                                                                              GHC.Types.IO))
                                                                                        Yesod.Form.Types.FormMessage)
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                (Yesod.Core.Types.HandlerT
                                                                                   Foundation.Sitio
                                                                                   GHC.Types.IO))
  Yesod.Form.Fields.doubleField @ (Yesod.Core.Types.HandlerT
                                     Foundation.Sitio GHC.Types.IO)
                                $dMonad
                                $dRenderMessage
  = Handlers.$sdoubleField
"SPEC/Handlers textField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.Sitio
                                                                                            GHC.Types.IO))
                                                                                      Yesod.Form.Types.FormMessage)
                                                                ($dMonad :: GHC.Base.Monad
                                                                              (Yesod.Core.Types.HandlerT
                                                                                 Foundation.Sitio
                                                                                 GHC.Types.IO))
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.Sitio GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handlers.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

