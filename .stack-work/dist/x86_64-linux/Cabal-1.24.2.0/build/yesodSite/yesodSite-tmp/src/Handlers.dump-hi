
==================== FINAL INTERFACE ====================
2017-06-08 17:24:39.909497 UTC

interface main@main:Handlers 8002
  interface hash: 17b4e5b49497ecfe4abbfb106c236417
  ABI hash: d30165c587d7dfc9e6129a44261e2c2d
  export-list hash: 25d891e3eaa47b307aac404b7ba77fb9
  orphan hash: f513ec7de02c11cd6b411f0ad9c72596
  flag hash: cea58010d6f822e09f76168887728323
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.abn
  Handlers.art
  Handlers.dptos
  Handlers.formAlbuns
  Handlers.formAlbunsMusicas
  Handlers.formArtistas
  Handlers.formDepto
  Handlers.formMusicas
  Handlers.formPessoa
  Handlers.formVertentes
  Handlers.getAlbumIdR
  Handlers.getAlbumMusR
  Handlers.getAlbumR
  Handlers.getArtistaIdR
  Handlers.getArtistaLstR
  Handlers.getArtistaR
  Handlers.getCadastroR
  Handlers.getDeptoR
  Handlers.getHelloR
  Handlers.getListarR
  Handlers.getMusicaIdR
  Handlers.getMusicaR
  Handlers.getPessoaR
  Handlers.getVertenteIdR
  Handlers.getVertenteLstR
  Handlers.getVertenteR
  Handlers.msc
  Handlers.postAlbumMusR
  Handlers.postAlbumR
  Handlers.postArtistaR
  Handlers.postCadastroR
  Handlers.postDeptoR
  Handlers.postMusicaR
  Handlers.postPessoaR
  Handlers.postVertenteR
  Handlers.vts
module dependencies: Foundation
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-DDov2e1Yemt94DudUvTLYZ
                      aeson-compat-0.3.6@aeson-compat-0.3.6-2DGXsEffmptCnWvZsLNGWu
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-HsZBRE01qJxJ1MwODysbnY
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.9@case-insensitive-1.2.0.9-DO0AWfy7hdR2nQUG46ef58
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      cipher-aes-0.2.11@cipher-aes-0.2.11-3bgwrLYUdx3AMYHUPuxu87
                      clientsession-0.9.1.2@clientsession-0.9.1.2-KRcVaZxQ84gBM2BKF2NUTQ
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cprng-aes-0.6.1@cprng-aes-0.6.1-9Ysh71z5FLmK1QfZUn0KHr
                      crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-2naOMJ2jnvG5GhEt4Ao7bp
                      crypto-random-0.0.9@crypto-random-0.0.9-AoGITFIsDYP2IQzwS9RQF8
                      cryptohash-0.11.9@cryptohash-0.11.9-AwRqZE0EZ5i8pER7MJsLoX
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-DQeBh2BGjiJ2aigRmOz6SM
                      cryptonite-0.21@cryptonite-0.21-47iYBNmsFlII2FZyak8KXj
                      css-text-0.1.2.2@css-text-0.1.2.2-H2nzLAF8Lvh29Ya09mQHei
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5
                      entropy-0.3.7@entropy-0.3.7-GVoReSVE1cZ4Y1pKgzhBYO
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.7@http-api-data-0.3.7-Fjq248miKA8D5hFdZGD7aB
                      http-date-0.0.6.1@http-date-0.0.6.1-DIpeM7nOKwq7aBmb5ryU4N
                      http-types-0.9.1@http-types-0.9.1-AUkzzKpOoLmKIvDSpmjcFz
                      http2-1.6.3@http2-1.6.3-AntBmJg95Sg1Na7lIPgyhO integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      memory-0.14.3@memory-0.14.3-HxN2RgwYLqT3iHrmHIXRUq
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      path-pieces-0.2.1@path-pieces-0.2.1-7jYjtDsNHN0JfYriIYgB3j
                      persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem
                      persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC
                      postgresql-libpq-0.9.3.0@postgresql-libpq-0.9.3.0-FVKnfWO5tn29L1HQjaQ0as
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-7l6cEp6CJ0z95XHG51qnvo
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      securemem-0.1.9@securemem-0.1.9-8Xi2wNoj8BIHAoMFWnW1JR
                      shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-JJ9zm1wZxYIARxlVa3oQgs
                      skein-1.0.9.4@skein-1.0.9.4-1r9hT02ZzU5HeQ9SvXvQV
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-6d5jSu6VuYIIoyQixz5L7u
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-H6cJdoNnPqk1Ch333qtaPo
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-2rsQ1EVge26CO53M4gLdkE
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-3in25hi26fo3ynYVCgt8Z3
                      wai-logger-2.3.0@wai-logger-2.3.0-EYYpHmikC5d8pavu5CHXnD
                      warp-3.2.11.2@warp-3.2.11.2-EncNvviAzZWHK6yVvhIgD5
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-9L4rIyhZC8H6IVBX0SpXFc
                      yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV
                      yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8
                      yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf
                      yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5:Text.Email.Parser
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Bitmap
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Boxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Buildable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Collection
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Element
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Keyed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Mutable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Numerical.Subtractive
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Monad
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ASCII7
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF16
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF32
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.UTF8
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistConfig
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Handler
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Types
                         yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy:Text.Blaze.Html 288dbf097dbd0ff17b50c3c1330477db
import  -/  blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT:Text.Blaze.Internal 52ba665013f4dfa6d731e8584348806e
import  -/  Foundation 49b550bc5fd255ad3b3d72f9fd532034
  exports: abf0d926ff3e3cbee5d363c4b79f95cc
  AlbumMusR c53910c3b6a482abae2e7e8ade794d7d
  AlbumR b329194c2e6a16bc4ad30451d16ea5fd
  Albuns 9bc5ef425a07775d0f02f87079bb8dc4
  Albuns b1d8606aac45fe037c6493266fe45ede
  AlbunsId 4167702c6eb004cea40448c31a1e0344
  AlbunsMusicas d7b48400b973ce7c63f33c4a32ea7310
  AlbunsMusicas d39ac2ca4e49ed4bc6dedd2f4f19ca6b
  AlbunsNome 993439e30b85e87c0a1a685293b108b9
  ArtistaIdR fa0aea8b9773bd647b106eb9695355d6
  ArtistaR 710233785830960341444a145af76983
  Artistas e4da046898a9c961d8606713cf324b8d
  Artistas 44aad4b464de064102d4aa50fa00f821
  ArtistasId 514842d359693058eddfc552cbc26ed8
  ArtistasNome 8fbd555447ad93d5ffd4e11c08b1a89a
  CadastroR e820394bb9d6c4a184518423a9efb5de
  Departamento 1faa9226a5ee80a543e928d7c9ce0fa7
  Departamento 8942b5ff94b8e9f1c15dd01283acc897
  DepartamentoNome 6e4799c4a15df8879a4e15ba03a4eb0c
  DeptoR a66f5a477aa3bc41d9bf9637d6615eab
  Form b6c1eb8481be3a6f17f1b6f1372b8aa5
  Handler b2ca494a28597ee48d05304fe5de3e34
  ListarR 65c9a7ea9a684c67f548a78e570663b8
  MsgHello 56b62de683c484b0d5893a6cc524ca72
  MusicaR 48381c40c606d5f9daa01291a195d204
  Musicas 4b00a9a6d87c1bc67cc637bc1fea3f14
  Musicas 8d2066887b2402f7c2d28e8e47603db6
  MusicasId 1600fbe55bfa579cbfeb663ea2ec9ec1
  MusicasNome aa5ecb6308023aa44971367def0488bc
  Pessoa f4f5ce6fc9d8e7c8c427e7292884d5c0
  Pessoa 4618a4b990698a8b94135d8a5b76492a
  PessoaId 44887d9f69413d90144bb3f6440333d9
  PessoaNome ffad5a8c29609e7173176f3b107b05d5
  PessoaR ef3854cf8276b7f4bd56522a710081e0
  StaticR ed65af3d6a6b92e566035b36ab132b05
  VertenteIdR 41b181872ba03e81f813d59506092e89
  VertenteR 59d663d976ecd4af8309ce1fdbc40b72
  Vertentes 031772fa390f54efdf7a54775765ecd2
  Vertentes 20e24a312e1e9addbc60e7ba2f4cf84f
  VertentesId c2d787482ebbd3d980f46809922a1518
  VertentesNome a31a4b13c1699bb4b22fa09115062af1
  albunsNome d78a981eda6758a1fa646b270c0ac85e
  artistasNome c92880ce039a888b1b370f294146e387
  cadastromusica_css 4a25a659fda7b01fb06ce98e056fb6ff
  cadastrosimples_css 9254c3716486fe3221c98d333b163d71
  departamentoNome f63cb7e47fee07fba9514f58216e08db
  departamentoSigla be53b1110fed0671cf69b1bea7744088
  listagemsimples_css a74b5a84bb32ce5fdaf4da0984d00876
  musicasNome ad3f4a2dc77aef4290b39e8c95d3bcfd
  pessoaDeptoid daa5a9f863f9ce2317f224e3de5c95f5
  pessoaIdade ab037591677b9a8258253974d601466e
  pessoaNome 7b8e3e4421d1f8ea09efddeaef5cfebd
  pessoaSalario ce7743be12820eb28ef19904c8d10921
  vertentesNome 6a16a12846a38cab55a12b26032e9e47
  widgetForm 00a1e62f16428940b1d064208382bc5c
  widgetFormCadastroAlbum 6a454a82b636c65bc09de76a0aaf0343
  widgetFormCadastroMusica 1e462462cf7eccdad7f32f156ee482ce
  widgetFormCadastroSimples c7d3396bf2ec8ae512336140e48eea4c
import  -/  monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger c186132138b23c0e4c9839f4d7247bee
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistEntity 2dfa7e1527d6a9f72c2e7017cee17d47
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistQuery 876fe93620908107224b47244ae2dedc
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistStore a52bd5d94452c0e7428ebf6bdf575274
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql 326569900059893a227843896529734d
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css ae836951711b38c5fd293d4083625473
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Lucius 3f4d62d4427349a5525aed8b7fcba880
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
import  -/  yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV:Yesod 9b32a342acc9baee13df0be07e3d39c5
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Yesod 0f950f5b38ca208030e2bcd8e2a1d8de
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Handler fb74858425a74dc2ac28440095be4990
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Widget 50472288dfa3af7a662f0b4e16cf1eb4
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Fields 65812cd1c1936c49201654803f10a7e1
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Functions 30116c4748d2a9aa9d527802b240f53f
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Types e06b3d57400b5cd8ec2ddccfdae55536
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf:Yesod.Persist.Core 39014f6db198f5fe2002eb686b30660e
addDependentFile "/home/user/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
d0bff2801ec0d0dde89a4a84b67450c6
  $s$WAlbunsNome_$d~~ ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
a4f7ac5f9a2b58d095e58e7fa5eca4f5
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
1b9fb0b9ed37df562f2a704a99907cdc
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta36 :: a)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta36) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
d8aae7366d45a8369a7d2b3034ff7f77
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
5855a25f2d112af3b174ac7ee18fb8e5
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fApplicativeHandlerT_$dMonad) -}
e7eef6218d283f355719db47b3df1834
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio) -}
fe0eed2ae4185e337330ea9a5c84c63b
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handlers.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site) -}
58019450207c10e1a530a73d98988a0e
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta36 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta36) -}
ff71a5fe41bba3ebccda3f022eb3c774
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
7725cdd3fa82c25396ea808cc7e46915
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta36 :: GHC.Types.IO α) ->
                 let {
                   eta37 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta36
                 } in
                 (\ (ds8 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta37)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
e10d5b97f460f2ec519974911eb34444
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
5ecdfa7a1469bbbcbd74661d071b6928
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
68ec4e11a09838193976e3d2a6ddae1c
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fFunctorAForm_$s$fMonadHandlerT -}
c484a81369df10ea17746c4592af209e
  $s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeHandlerT -}
0de912c1d3b3a44b42982b4ba98a9559
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
fe753515d055cfa47183adb3e74f2eab
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
5f217c5cede72f4248c58442c487c3b5
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
35d1a4947b2b33db59e190dd672a1dd0
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
e89c5c7f3e491a5cf3c24bb496f2fef8
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta36 :: GHC.Exception.Exception e)
                   (x7 :: e)
                   (eta37 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta36 x7) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta38)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
3fc57680154be05157bd14c14028713a
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
f92d179f063d21ed1c4c67f4dde75437
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
fdc5284469d7304442e9a646e1c739e0
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
064e31c8146d3ee32dee213ebf8fa992
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
2caaf182efdea15ee066b3b51c29d1a4
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebHandlerT -}
0a8e88287bfd991acf62afbde56d2164
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Handlers.$s$fMonadHandlerWidgetT @ site)
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ GHC.Types.IO
                     @ site
                     Handlers.$s$fMonadHandlerHandlerT1) -}
20644554d570b8c2a556e8dd6583c6c6
  $sdoubleField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Double
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Double
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ GHC.Types.Double
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      Yesod.Form.Fields.doubleField6
                      eta156)
                   (Yesod.Form.Fields.doubleField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
0e2d0bf1a6ebcfb9cacb431752aac5b8
  $stextField ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handlers.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.textField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
b5a5b6beac2065c6cdb56e82f90b79c8
  $stoWidget4 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    GHC.Types.~~ (Yesod.Routes.Class.Route Foundation.Sitio
                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                  -> Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @~ <Yesod.Routes.Class.Route Foundation.Sitio
                       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                       -> Data.Text.Internal.Text>_N) -}
e4a5126e72ecc1bb3faec9fdea259a3e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handlers.$trModule2
                   Handlers.$trModule1) -}
492d30345dc715837194b01f4c7b2ead
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handlers"#) -}
ceb9374a275b5be835fffdbec8f828ce
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
3a099b5d4efa21b8f0796b34681abddd
  abn ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Albuns))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Albuns]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Albuns]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Albuns
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityAlbuns,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Albuns>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendAlbuns[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Albuns))
                          Handlers.abn11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Albuns]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Albuns]>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Albuns)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                         Handlers.abn2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Albuns)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Albuns)>_N)))) -}
66f3346d1137f22463794683bc72259c
  abn10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
ccf9400093a63f1f47664694f6d7e9f0
  abn11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Albuns]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Albuns)
                   Handlers.abn12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Albuns))) -}
92182686d07827eb58b08ae3fbf1874e
  abn12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Albuns
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Albuns
                   @ Data.Text.Internal.Text
                   Handlers.abn13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldAlbunstyp0[0]) <Data.Text.Internal.Text>_N)) -}
749d9f1715fe7d1c9c902aec55ec465a
  abn13 :: Foundation.R:EntityFieldAlbunstyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.AlbunsNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
1ed55ce585aa3488547056eade3b5345
  abn2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Albuns
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Albuns) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds8 ds9 ->
                  case ds9 of wild1 { Foundation.Albuns ds10 ds11 -> ds10 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Albuns
                    ent)) -}
c22ae61f841670e415cb6a88409a61a0
  abn9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Albuns,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityAlbuns,
                  Handlers.abn10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
f4f8fe4593b038c7b6382ad278851be0
  art ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Artistas
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityArtistas,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Artistas>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Artistas))
                          Handlers.art11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Artistas]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Artistas]>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                         Handlers.art2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Artistas)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Artistas)>_N)))) -}
bde120ef35467eb1836b597a0ea440e8
  art1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Artistas) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                        Handlers.art3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                        Handlers.art2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)>_R)
                   ipv }) -}
c0050f8a4eec36d3ed8f3e243432c4e9
  art10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
0fae70d2f8fc29a390b6cf14916645ff
  art11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
44b5dab5f526c2e3b791716abfe7f3fe
  art12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
3267d6a73b23743b2187bb0e258fa44b
  art13 ::
    Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
e917e37423de5dc56b6a92a615f6e534
  art2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Artistas
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Artistas) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds8 ds9 ->
                  case ds9 of wild1 { Foundation.Artistas ds10 -> ds10 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Artistas
                    ent)) -}
5c703c5657fe29a913981f7dc852ecc3
  art3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas)))
                   = Handlers.art4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Artistas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Artistas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Artistas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Artistas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Artistas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Artistas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Artistas]>_N)))) -}
7f491659956d2d7e2684f00a5ae73fc9
  art4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Artistas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.art9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Artistas))
                   Handlers.art5) -}
d0225c0144b7158c0bcdc0a874b05d22
  art5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Artistas]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Artistas)
                   Handlers.art6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Artistas))) -}
f2d97072e56623b35752d810e19b7dc5
  art6 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Artistas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Artistas
                   @ Data.Text.Internal.Text
                   Handlers.art7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldArtistastyp0[0]) <Data.Text.Internal.Text>_N)) -}
abef9bf3db76647a2ae61a555b6d06aa
  art7 :: Foundation.R:EntityFieldArtistastyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ArtistasNome
                   @ Data.Text.Internal.Text
                   Handlers.art8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
eff68bb55b5f0b1a539b849b1c3fd99b
  art8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
349a2e688c2ab4da903108e05eb6f33d
  art9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Artistas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityArtistas,
                  Handlers.art10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
4f93b47e22676a537f341302336fedaf
  dptos ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity
                               Foundation.Departamento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Departamento
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityDepartamento,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Departamento>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Departamento))
                          Handlers.dptos11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Departamento]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Departamento]>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Departamento)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                         Handlers.dptos2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Departamento)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Departamento)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Departamento)>_N)))) -}
9ca580a1c8453d4f43712e7dcdd865e2
  dptos1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Departamento) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento]
                        Handlers.dptos3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Departamento)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                        Handlers.dptos2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Departamento)>_R)
                   ipv }) -}
baef31904a46c824a243c167bff22830
  dptos10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
4ff9ec68d7bf8a9392c541aa57ac86d6
  dptos11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
c02775891ffeb1824cdb5a2636b1cbb4
  dptos12 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
1c6b07df520e2efa1b3fd1d2ce8513f6
  dptos13 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
dddec1d820f8ab92007769eee1ea7c74
  dptos2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Departamento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(A,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds8 ds9 ->
                  case ds9 of wild1 { Foundation.Departamento ds10 ds11 -> ds11 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Departamento
                    ent)) -}
ffad5fc58f9ab96ad48277fbeab138c8
  dptos3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Departamento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento)))
                   = Handlers.dptos4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Departamento))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Departamento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Departamento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Departamento]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Departamento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Departamento]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento]>_N)))) -}
34997ec7793781fcd92fa3e8655a0c07
  dptos4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Departamento)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Departamento
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.dptos9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Departamento))
                   Handlers.dptos5) -}
67dc5f17b188538ded39a175ee746db3
  dptos5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
f27f8ba50a9b0578eb3100a899ca58e5
  dptos6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldDepartamentotyp0[0]) <Data.Text.Internal.Text>_N)) -}
baa9582b46a5039d91c34f8457061606
  dptos7 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   Handlers.dptos8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
8539a1a0de7eebf588f50fd7fde54664
  dptos8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
3c0daf3805d02318cafcdc949545d698
  dptos9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.dptos10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
990e74d5c9750bc42e2c343cb16c4132
  formAlbuns :: Foundation.Form Foundation.Albuns
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formAlbuns1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
5f34d7d87c9718c4ddb3497d6e6d5a07
  formAlbuns1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Albuns,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Albuns
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formAlbuns2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Albuns>_N))
                   eta105
                   eta106
                   eta107) -}
d24c31b21973e03b7400a51024da6aea
  formAlbuns10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns11) -}
f1ad611dc642fd7c33d2317f3f3908d8
  formAlbuns11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formAlbuns12 of ds8 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c2e8d8802c94c05cbf1f31f1ade5e8b3
  formAlbuns12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds8 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formAlbuns13
                   0#
                   ipv }) -}
0fac9a0de273da1541fb1db3f42ef536
  formAlbuns13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
e21699a8104a4843fbdf8ae98f596093
  formAlbuns2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Albuns,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formAlbuns_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult
                                 (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult
                                (Database.Persist.Class.PersistEntity.Key Foundation.Artistas),
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds10 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormFailure @ Foundation.Albuns errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Albuns
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Albuns
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Albuns y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Albuns
                                  (Foundation.$WAlbuns a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Albuns,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
ee8c7860d629cae079354d3d02159eae
  formAlbuns3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
d172556259ea426911541d375594739e
  formAlbuns4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formAlbuns5) -}
a3600d04fa58c6f44b60d01573c3bb4a
  formAlbuns5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds8 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formAlbuns6
                           0#
                           ipv }) of ds8 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
088b25c894a2a9d610fb1ea5af3ead95
  formAlbuns6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Artista principal: "#) -}
c58375fa73b58465fe865e81bf495bc4
  formAlbuns7 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Handlers.formAlbuns8
                   Handlers.art1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Artistas)>_R))
                        (Sym (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Artistas)>_N)))) -}
fa6f586dc3af504973ebce6e5154c076
  formAlbuns8 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   @ Foundation.Sitio
                   Foundation.$fEqKey7
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
836ae1c1abfd85d115e2c71b8f725221
  formAlbuns9 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formAlbuns10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
ea42268e740686b78fb01b8c6f90c7c9
  formAlbunsMusicas :: Foundation.Form Foundation.AlbunsMusicas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formAlbunsMusicas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
96d477ec685051a840088306189920a0
  formAlbunsMusicas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.AlbunsMusicas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formAlbunsMusicas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.AlbunsMusicas>_N))
                   eta105
                   eta106
                   eta107) -}
6229f5aafd487c9d0689954aac2d3c33
  formAlbunsMusicas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
9d689f5cee75fd943c8df67bf79b885e
  formAlbuns_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formAlbuns9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
344a8d8ddbebbc007319f0fd20222d9f
  formAlbuns_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns7
                   Handlers.formAlbuns3
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Artistas))) -}
2992c839a60e00c127b6cc92c703e543
  formArtistas :: Foundation.Form Foundation.Artistas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formArtistas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
69e4ec498aff1c475c19d117fa72f4c0
  formArtistas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Artistas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formArtistas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Artistas>_N))
                   eta105
                   eta106
                   eta107) -}
a974b4e63eb92c788eaf55bc83ed0857
  formArtistas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Artistas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta36 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta37 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta38 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta36
                       eta37
                       eta38
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x7 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Artistas
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Artistas errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Artistas
                             (case a1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Artistas dt }) },
                      x7, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Artistas,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
23248b71dfaa3707598f6cb795856989
  formDepto :: Foundation.Form Foundation.Departamento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDepto1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
6e9d015e661d8328bc4352b07dd41f72
  formDepto1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Departamento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formDepto2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Departamento>_N))
                   eta105
                   eta106
                   eta107) -}
202d77df1ce99dd027d3afca465aa51c
  formDepto10 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto11) -}
070ff59f5b1cf22bd7b434c9f3ff9358
  formDepto11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds8 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handlers.formDepto12
                           0#
                           ipv }) of ds8 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
ca6cdf1f41355d533724b9919a319973
  formDepto12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sigla"#) -}
d4868923916b2b0e33b898fdfb40fb75
  formDepto13 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto14
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
40737d3a2f0dd016dfc0b06f18f7b912
  formDepto14 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto15) -}
884864410f2c1d9245c87f321130223a
  formDepto15 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handlers.formDepto16 of ds8 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
5c081acc9a51dc5373afdd63fea8eb9f
  formDepto16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds8 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDepto17
                   0#
                   ipv }) -}
fbd0a237979aa24b4c5ccf277fc7924a
  formDepto17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome"#) -}
c3632a766a1581b8e1fd1c3f3ce3b657
  formDepto2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Departamento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formDepto_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x7 y z ->
                  case ((Handlers.formDepto_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Data.Text.Internal.Text>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds10 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x8 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x8 of wild3 {
                             DEFAULT -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x8 of wild3 {
                             DEFAULT
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ Foundation.Departamento
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x8 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing @ Foundation.Departamento
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure @ Foundation.Departamento y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ Foundation.Departamento
                                  (Foundation.$WDepartamento a1 g) } },
                      \ (x9 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x7 (y1 x9),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Departamento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
7bc811cb03e83e2a35e169a9abff412c
  formDepto3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   Handlers.formDepto8
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formDepto4) -}
f0d719b1a483d64583d406cb1a21e90e
  formDepto4 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formDepto5
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
162b50ea0b0ad7b6c9750db52d95ec04
  formDepto5 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formDepto7, Handlers.formDepto6)) -}
a38a20acc51a79d9b0eed9ecab4c995c
  formDepto6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "3"#) -}
00cc82982b0976e3b4f5bd404c54a833
  formDepto7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
19c01efa76c9010629a59bb5f3373777
  formDepto8 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formDepto9) -}
ebf659680d4848d410a351ba3d95e5ad
  formDepto9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
15badc0500a7ea65f452bc1342bb8e30
  formDepto_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto13
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
ff82af49cf88c7424ca9c547d3e75052
  formDepto_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.$stextField
                   Handlers.formDepto3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
d28f6db3e6bdbcb33705dbd180e07189
  formMusicas :: Foundation.Form Foundation.Musicas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formMusicas1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
b966040f51e1c560ee76c723dc94efa4
  formMusicas1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Musicas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Musicas
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formMusicas2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Musicas>_N))
                   eta105
                   eta106
                   eta107) -}
90276d36c7778319c8a83aabe3d8a478
  formMusicas2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Musicas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
7cd681cb6ac09f7878ca489755a433d0
  formPessoa :: Foundation.Form Foundation.Pessoa
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
7ae00be8837243443e32f007aab55aa0
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Pessoa,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Pessoa>_N))
                   eta105
                   eta106
                   eta107) -}
e21e76c22b04378500469809bffc8693
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoa,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
0e1bed79d54424f98dfc45df43545610
  formVertentes :: Foundation.Form Foundation.Vertentes
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formVertentes1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
b093558791b7937fab69ade475c679c7
  formVertentes1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Vertentes,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   (Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Handlers.formVertentes2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Vertentes>_N))
                   eta105
                   eta106
                   eta107) -}
6dbfca609679268de4454629cf0a4fd1
  formVertentes2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Vertentes,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta36 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta37 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta38 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                             [Yesod.Form.Types.FieldView
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                             -> [Yesod.Form.Types.FieldView
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                             Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handlers.formAlbuns_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta36
                       eta37
                       eta38
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x7 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Vertentes
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Vertentes errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Vertentes
                             (case a1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Vertentes dt }) },
                      x7, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Vertentes,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
6cf9ebbc9772e4aad37da5d1687b86c9
  getAlbumIdR ::
    Foundation.AlbunsId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (aid :: Foundation.AlbunsId) ->
                 let {
                   ds8 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                            Foundation.Albuns
                   = Handlers.getAlbumIdR13 aid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ Foundation.Albuns
                         ds8
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <Foundation.Albuns>_N)_R
                         r
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Foundation.$fYesodSitio_$cdefaultLayout
                      (let {
                         x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 1, Strictness: <S,U> -}
                         = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           let {
                             eta36 :: Data.Text.Internal.Text
                             = case ipv1 of wild { Foundation.Albuns ds10 ds11 -> ds10 }
                           } in
                           let {
                             eta37 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text eta36
                           } in
                           let {
                             eta38 :: Text.Blaze.Html.Html
                             = Text.Blaze.Internal.Content @ () eta37
                           } in
                           (# s1,
                              (GHC.Tuple.(),
                               (Yesod.Core.Types.GWData
                                  @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                  (\ (ds10 :: Yesod.Routes.Class.Route Foundation.Sitio
                                              -> [(Data.Text.Internal.Text,
                                                   Data.Text.Internal.Text)]
                                              -> Data.Text.Internal.Text) ->
                                   eta38)
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Body[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                  (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                    `cast`
                                  (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Script
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Script
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Stylesheet
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Stylesheet
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (Data.Map.Base.Tip
                                     @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Data.Text.Internal.Builder.Builder))
                                  (GHC.Base.Nothing
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Text.Julius.Javascript))
                                  (Yesod.Core.Types.$fApplicativeWidgetT2
                                     @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Head[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                 `cast`
                               (Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                       } in
                       let {
                         m2 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 2, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                        Foundation.Sitio
                                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                            (eta37 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                          x7 eta37) -}
                         = \ (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           x7
                       } in
                       let {
                         lvl145 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.Sitio))
                           {- Arity: 2 -}
                         = \ (ds10 :: ())
                             (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.Sitio
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             m2
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.Sitio>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             Handlers.getAlbumIdR6
                               `cast`
                             (<()>_R
                              ->_R Trans
                                       (<Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      ((,)
                                                         <()>_R
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                         <GHC.Types.IO>_N
                                                                         <Foundation.Sitio>_N)))_R)_R)_R))
                                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             eta36
                       } in
                       (\ (eta36 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                        Yesod.Core.Types.$fApplicativeWidgetT3
                          @ GHC.Types.IO
                          @ Foundation.Sitio
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handlers.getAlbumIdR1
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              ((,)
                                                 <()>_R
                                                 (Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                 <GHC.Types.IO>_N
                                                                 <Foundation.Sitio>_N)))_R)_R)_R))
                               (Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                          lvl145
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                          eta36)
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
6032b6ca9ef41da2e265e2ab6a0fc853
  getAlbumIdR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getAlbumIdR2 eta37) -}
ca8bddaf333a97a08929b86a8b2a600e
  getAlbumIdR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAlbumIdR11) -}
9d7938b1416774c31ead84c570079f95
  getAlbumIdR11 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAlbumIdR12) -}
21997c7fdcb8538775eb4ce3128faf4e
  getAlbumIdR12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
8cd1b2773b3f31cc2d98ee09ee58800f
  getAlbumIdR13 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Albuns
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         Foundation.Albuns
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.Albuns
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handlers.getAlbumIdR14
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Albuns>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAlbuns[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
a62d9918586982419240e2804f76c0cd
  getAlbumIdR14 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Albuns,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityAlbuns,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
5065ed98c494bedd57979060504a8de3
  getAlbumIdR15 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
1e9a0bc734f1e223ba1dfbc757b8d3e1
  getAlbumIdR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getAlbumIdR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
9ee4102d532eed441b886225dc87039c
  getAlbumIdR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAlbumIdR4) -}
f01c4d3159fd5fd01da9316de6d20ed2
  getAlbumIdR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAlbumIdR5) -}
16cc30e210aafd0eeab8e7d808bd1a15
  getAlbumIdR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> \\195\\129lbum "#) -}
f2225c76024d309134fb17012e504973
  getAlbumIdR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds8 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.getAlbumIdR7 #)) -}
61d189f9a80ef24a7ecbd972b2b5a910
  getAlbumIdR7 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAlbumIdR8
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
3317bfb126a8ec4f3c3e3c63f312f620
  getAlbumIdR8 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getAlbumIdR9
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
7b56b12942630ceafd1a425cc1c2f575
  getAlbumIdR9 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.getAlbumIdR_eta1) -}
811a8bf4234eeac928c489339f596289
  getAlbumIdR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAlbumIdR3) -}
2a4802662faf9973a82a114330884271
  getAlbumIdR_eta1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAlbumIdR10) -}
fbe2918b73d1d82b2171eb7e4a2886d7
  getAlbumMusR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getAlbumMusR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
429f7e350ea8f8cb16d6a4ce382a09d2
  getAlbumMusR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getAlbumMusR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.AlbumMusR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getAlbumMusR4
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl145
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
29a88af84f039a5007a4bab85e9e39c9
  getAlbumMusR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getAlbumMusR3 eta37) -}
ff03a59ef344a0ee58f32e4646a21461
  getAlbumMusR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.cadastrosimples_css1
                                     `cast`
                                   (Sym (Yesod.Static.D:R:RouteStatic0[0])))
                                  `cast`
                                (Trans
                                     (Sym (Foundation.D:R:RouteSitio0[0]))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))) #)) -}
a2f6a54d22e994b212427fe0cd211505
  getAlbumMusR4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Novo \\195\\161lbum"#) -}
15eda84e1b76c0560050b7e9f5fd695a
  getAlbumMusR5 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.AlbunsMusicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbunsMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
05c8778c1a1da8c343e63ea7e78814c5
  getAlbumR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getAlbumR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
a22156984d403a574dbdd1326f3d72c7
  getAlbumR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getAlbumR2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroAlbum1
                       Foundation.AlbumR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getAlbumMusR4
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl145
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
26ce6a8d81352fad278bf165a7f4e633
  getAlbumR2 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Albuns
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
5e35e3f9f72a203ca7a8bb8391f25c35
  getArtistaIdR ::
    Foundation.ArtistasId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (aid :: Foundation.ArtistasId) ->
                 let {
                   ds8 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                            Foundation.Artistas
                   = Handlers.getArtistaIdR6 aid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ Foundation.Artistas
                         ds8
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <Foundation.Artistas>_N)_R
                         r
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Foundation.$fYesodSitio_$cdefaultLayout
                      (let {
                         x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 1, Strictness: <S,U> -}
                         = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           let {
                             eta36 :: Data.Text.Internal.Text
                             = case ipv1 of wild { Foundation.Artistas ds10 -> ds10 }
                           } in
                           let {
                             eta37 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text eta36
                           } in
                           let {
                             eta38 :: Text.Blaze.Html.Html
                             = Text.Blaze.Internal.Content @ () eta37
                           } in
                           (# s1,
                              (GHC.Tuple.(),
                               (Yesod.Core.Types.GWData
                                  @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                  (\ (ds10 :: Yesod.Routes.Class.Route Foundation.Sitio
                                              -> [(Data.Text.Internal.Text,
                                                   Data.Text.Internal.Text)]
                                              -> Data.Text.Internal.Text) ->
                                   eta38)
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Body[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                  (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                    `cast`
                                  (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Script
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Script
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Stylesheet
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Stylesheet
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (Data.Map.Base.Tip
                                     @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Data.Text.Internal.Builder.Builder))
                                  (GHC.Base.Nothing
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Text.Julius.Javascript))
                                  (Yesod.Core.Types.$fApplicativeWidgetT2
                                     @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Head[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                 `cast`
                               (Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                       } in
                       let {
                         m2 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 2, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                        Foundation.Sitio
                                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                            (eta37 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                          x7 eta37) -}
                         = \ (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           x7
                       } in
                       let {
                         lvl145 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.Sitio))
                           {- Arity: 2 -}
                         = \ (ds10 :: ())
                             (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.Sitio
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             m2
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.Sitio>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             Handlers.getAlbumIdR6
                               `cast`
                             (<()>_R
                              ->_R Trans
                                       (<Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      ((,)
                                                         <()>_R
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                         <GHC.Types.IO>_N
                                                                         <Foundation.Sitio>_N)))_R)_R)_R))
                                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             eta36
                       } in
                       (\ (eta36 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                        Yesod.Core.Types.$fApplicativeWidgetT3
                          @ GHC.Types.IO
                          @ Foundation.Sitio
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handlers.getArtistaIdR1
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              ((,)
                                                 <()>_R
                                                 (Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                 <GHC.Types.IO>_N
                                                                 <Foundation.Sitio>_N)))_R)_R)_R))
                               (Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                          lvl145
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                          eta36)
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
0da007ae3b9f935e04e30cfdc8928e50
  getArtistaIdR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getArtistaIdR2 eta37) -}
9e4fd1cc8094c2bff3476a155c49475d
  getArtistaIdR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getArtistaIdR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
306bbfaabadc2cdcc3f0540755b4907e
  getArtistaIdR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getArtistaIdR4) -}
42b763c08b8726997709f7ed9005f2a1
  getArtistaIdR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getArtistaIdR5) -}
b870eca50b335fa4e62916a009c5ab9c
  getArtistaIdR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> Artista "#) -}
22102a9c4a7a813ba10bfa2db3d58130
  getArtistaIdR6 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Artistas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         Foundation.Artistas
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.Artistas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handlers.getArtistaIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
282df9eac3a79ecec8d1b75ca5b4e2d9
  getArtistaIdR7 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Artistas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityArtistas,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
51d428e13d1def24e29d83d10cde3f1e
  getArtistaIdR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getArtistaIdR3) -}
fdadd129d74c10c89f4eddd8c428151c
  getArtistaLstR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getArtistaLstR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
e2263e4cdc1f23b1ec9cb78bd2fff032
  getArtistaLstR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                        Handlers.getArtistaLstR49
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                          {- Arity: 2 -}
                        = Handlers.getArtistaLstR48 ipv1
                      } in
                      let {
                        lvl145 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds9 :: ())
                            (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m2
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <((),
                                                  Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       Foundation.Sitio))>_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            Handlers.getArtistaLstR41
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta36
                      } in
                      let {
                        m3 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getArtistaLstR36
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl145
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta36
                      } in
                      let {
                        lvl146 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds9 :: ())
                            (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m3
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getArtistaLstR4
                            eta36
                      } in
                      (\ (eta36 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getArtistaLstR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.Sitio>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                         lvl146
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         eta36)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
f04c6be7dded90d692655704d71aa022
  getArtistaLstR10 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR11) -}
7bc4d003d56934b34b0f0689fa6a841f
  getArtistaLstR11 ::
    Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR24
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getArtistaLstR12
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
9f8e85decbb516dc26a1453e688af43a
  getArtistaLstR12 ::
    [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getArtistaLstR19
                   Handlers.getArtistaLstR13) -}
a4ca2c496de87fa1f5e9b24ec742bfd0
  getArtistaLstR13 ::
    [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getArtistaLstR14
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
1dd459efaf8e1abee6874a43ff31e116
  getArtistaLstR14 ::
    Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR17
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getArtistaLstR15
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
660f4c27f7bc5c93f22429a72b357244
  getArtistaLstR15 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR16)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
b9994eea05431f4f41e33d27d42bb826
  getArtistaLstR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "0"#) -}
73ac735530fa5a9041be0aefe908e199
  getArtistaLstR17 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR18)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
5ffac355782fa6b3c2f256cc8326f60c
  getArtistaLstR18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "border"#) -}
7457750cbc6b943dbf9fb4ef7ab8337d
  getArtistaLstR19 ::
    Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR22
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getArtistaLstR20
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
012c8225af5359202acd3a3026d8eeae
  getArtistaLstR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getArtistaLstR3 eta37) -}
53353682602d2f769e3ed165ed75862b
  getArtistaLstR20 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR21)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
93fa647c4962d428f4f4f208d6cf642d
  getArtistaLstR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#ecc"#) -}
0c6067e3cb4af8c6ec2e4c4e579fc010
  getArtistaLstR22 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR23)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
fa2f25f46022a2687ebbd1880d0b7648
  getArtistaLstR23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "background-color"#) -}
a82ca043ae23444bf7d4baa55bd176d3
  getArtistaLstR24 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR25)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
fff2e00687890688f61c418ddcffed1e
  getArtistaLstR25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "input"#) -}
691d23b98b86c62db44eff8e8269ddc2
  getArtistaLstR26 ::
    Text.Internal.Css.TopLevel Text.Internal.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Internal.Css.TopBlock
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR27) -}
4e4740588ecd9d0befb213371d667ae8
  getArtistaLstR27 ::
    Text.Internal.Css.Block Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Block
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR34
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:SelectorResolved[0])))))
                   Handlers.getArtistaLstR28
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Internal.Css.D:R:MixinsResolved[0])))) -}
11a7a3cd20626b4760fefb482a02637e
  getArtistaLstR28 ::
    [Text.Internal.Css.Attr Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved)
                   Handlers.getArtistaLstR29
                   (GHC.Types.[]
                      @ (Text.Internal.Css.Attr Text.Internal.Css.Resolved))) -}
9e8f75e98b98363deeca2f8fbcca2d7b
  getArtistaLstR29 ::
    Text.Internal.Css.Attr Text.Internal.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Internal.Css.Attr
                   @ Text.Internal.Css.Resolved
                   Handlers.getArtistaLstR32
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))
                   Handlers.getArtistaLstR30
                     `cast`
                   (Trans
                        (forall (s :: <*>_N).
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.N:Builder[0]))
                             (Sub (Sym (Text.Internal.Css.D:R:StrResolved[0])))))) -}
ddf81c1ad3a084a83758d4b9e4ff1bfb
  getArtistaLstR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.listagemsimples_css1
                                     `cast`
                                   (Sym (Yesod.Static.D:R:RouteStatic0[0])))
                                  `cast`
                                (Trans
                                     (Sym (Foundation.D:R:RouteSitio0[0]))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))) #)) -}
a99ecbb27ea8a8c907fe12cda4b85f53
  getArtistaLstR30 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR31)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
e3aa8239770ece27d475159836176d2b
  getArtistaLstR31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "inline"#) -}
0ce1591f9d7b738a0b95505fc94a1c96
  getArtistaLstR32 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR33)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
9d094e96cbe4e3340ab72a80d4a7c9fb
  getArtistaLstR33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "display"#) -}
4ff037b2c81f0efe19b6ac3dbf10d65a
  getArtistaLstR34 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   (eta36 :: Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text])
                   (eta37 :: Data.Text.Internal.Builder.Buffer s)
                   (eta38 :: GHC.Prim.State# s)[OneShot] ->
                 ((Text.Internal.Css.fromText Handlers.getArtistaLstR35)
                    `cast`
                  (Data.Text.Internal.Builder.N:Builder[0])
                    @ s
                    (\ (buf :: Data.Text.Internal.Builder.Buffer s) -> eta36 buf)
                    eta37)
                   `cast`
                 (GHC.ST.N:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta38) -}
d5ef65f9bd6f37a648c6352c93c25559
  getArtistaLstR35 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "form"#) -}
54739793f8b6e2cbd24f5d24533629aa
  getArtistaLstR36 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getArtistaLstR37 eta37) -}
be45772552645a5730796990ea1251ec
  getArtistaLstR37 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getArtistaLstR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
0ad259bc868fa783d0bb916ad11eb5ac
  getArtistaLstR38 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getArtistaLstR39) -}
541901e692f9ded304bc40bceeba8aca
  getArtistaLstR39 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getArtistaLstR40) -}
e6c8052128660f492a04bbfd9515e66e
  getArtistaLstR4 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: (\ (ds8 :: ()) -> Handlers.getArtistaLstR5) -}
0d4e02748edfc7652d542adda1d69836
  getArtistaLstR40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<div class=\"container\"><h1> Artistas cadastrados</h1>\n"#) -}
3349da58a16352db57de695e643a8c97
  getArtistaLstR41 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds8 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.getArtistaLstR42 #)) -}
5ec149c78574fca99b1eb4f80b90a5f0
  getArtistaLstR42 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getArtistaLstR43
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
7d4116d7e48d841b98c2abd70259b2f6
  getArtistaLstR43 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getArtistaLstR44
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
227fd23ca98c7856e204383d747f4ffd
  getArtistaLstR44 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.getArtistaLstR_eta1) -}
419e1c6264de6ecb80705f2cfcbaf20a
  getArtistaLstR45 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getArtistaLstR46) -}
6879153d92de3c9cdafe00ca69591049
  getArtistaLstR46 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getArtistaLstR47) -}
b5a3d87cd11ab69c2d88a11ffbe6ef9e
  getArtistaLstR47 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</div>\n"#) -}
02b4fed467e80428e9da6033f2d80265
  getArtistaLstR48 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
a26b0bb3f5952d69fe68f89af293d454
  getArtistaLstR49 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas)))
                   = Handlers.getArtistaLstR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Artistas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Artistas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Artistas))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Artistas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Artistas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Artistas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Artistas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Artistas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Artistas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Artistas]>_N)))) -}
49bcc2c4c346ed0a641f519945bc3e32
  getArtistaLstR5 ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.Sitio
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ (Yesod.Routes.Class.Route Foundation.Sitio
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @ (Yesod.Routes.Class.Route Foundation.Sitio
                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                         -> Data.Text.Internal.Text)
                      @~ <Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.Sitio
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.Sitio
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   (Handlers.$s$fMonadWidgetWidgetT @ Foundation.Sitio)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   Handlers.getArtistaLstR6) -}
e4ac0768337478b8c4b99d883101508c
  getArtistaLstR6 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Internal.Css.Css
  {- Arity: 1,
     Unfolding: (\ (_render :: Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 Handlers.getArtistaLstR7) -}
3ca00622fbbe4d9e0ba1508c3b27a526
  getArtistaLstR7 :: Text.Internal.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Internal.Css.CssNoWhitespace
                   Handlers.getArtistaLstR8) -}
27ad0ce3406940306bdecb70466f8b94
  getArtistaLstR8 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getArtistaLstR26
                   Handlers.getArtistaLstR9) -}
3d182ab8381f8ade05c4db1f4f32b1fd
  getArtistaLstR9 ::
    [Text.Internal.Css.TopLevel Text.Internal.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved)
                   Handlers.getArtistaLstR10
                   (GHC.Types.[]
                      @ (Text.Internal.Css.TopLevel Text.Internal.Css.Resolved))) -}
3d08cee02818e4ef18eabd343d9c4365
  getArtistaLstR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getArtistaLstR38) -}
c3e869733bfe88974b52ed8434e99a76
  getArtistaLstR_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getArtistaLstR45) -}
812e497d750f9b7fb67797db470ed599
  getArtistaLstR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Artistas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Artistas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.getArtistaIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Artistas))
                   Handlers.art5) -}
237e161fe55810575f7e2a294a5788c9
  getArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getArtistaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
3f2bb34f85c8e78a751c8da7a59cc5d7
  getArtistaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getArtistaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.ArtistaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getArtistaR2
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl145
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
d88550bbce22cd79226c1508b0ac8a8b
  getArtistaR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Novo artista"#) -}
91e2c3621510f7def3e3cd6358ac3087
  getArtistaR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formArtistas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
b260c3ee9a27cf863f8c0e843ea8699c
  getCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
29a9ffc27f04b1e76895c81fc8721f5d
  getCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getCadastroR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.CadastroR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getCadastroR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
e8e1990762d4569113fb7e8d69dcc1d0
  getCadastroR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Pessoas"#) -}
ec41c6c5cd36f16c61bf29d46215d0a5
  getCadastroR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
aba5c64bcb27ab5eebc5b7562b2fe312
  getDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c5f404d12dd641f7f74003d73f00da04
  getDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getDeptoR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Foundation.widgetForm1
                        Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                        enctype
                        widget
                        Handlers.getDeptoR2)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
94eda26cb7b150e9c22156b9ecbe3960
  getDeptoR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Departamentos"#) -}
898d8593a534fcfc72c58e30f75b2d19
  getDeptoR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
06ae61b2434dff8969ac3306b0f7bf18
  getHelloR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getHelloR1
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
1a094afcc12ad290d0da7cee608ceba1
  getHelloR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR7
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHelloR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta36) -}
78134d252237759c5580abcab0bb6709
  getHelloR10 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.getHelloR11
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
2a191806c43fbecc20ea58c99ef4a75b
  getHelloR11 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.getHelloR_eta) -}
70e024a4cbad6b9378e8cdb30bb409fe
  getHelloR12 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHelloR13) -}
236d2b6e0d5679a174d147e80cfad63c
  getHelloR13 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHelloR14) -}
16981b83ca28732aff0a04530bc1faf6
  getHelloR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> "#) -}
569e6d5e556036608dd4d5af510cb4b2
  getHelloR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ (ds8 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHelloR3
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAlbumIdR6
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta36) -}
8adb529da1ac76c6e698020ca14d49d1
  getHelloR3 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   @ ()
                   Handlers.getHelloR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N))
                   Handlers.getHelloR4) -}
7db80f218c8f512e69b6cf944b0e82b9
  getHelloR4 ::
    (Foundation.SitioMessage -> Text.Blaze.Html.Html)
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (urender :: Foundation.SitioMessage -> Text.Blaze.Html.Html) ->
                 let {
                   eta36 :: Text.Blaze.Html.Html = urender Foundation.MsgHello
                 } in
                 (\ (eta37 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta38 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta38,
                     (GHC.Tuple.(),
                      (Yesod.Core.Types.GWData
                         @ (Yesod.Routes.Class.Route Foundation.Sitio)
                         (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                    -> Data.Text.Internal.Text) ->
                          eta36)
                           `cast`
                         (Sym (Yesod.Core.Types.N:Body[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                         (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                           `cast`
                         (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Script
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Script
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (GHC.Base.id
                            @ [Yesod.Core.Types.Stylesheet
                                 (Yesod.Routes.Class.Route Foundation.Sitio)])
                           `cast`
                         (Sym (Yesod.Core.Types.N:UniqueList[0]
                                   <Yesod.Core.Types.Stylesheet
                                      (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                         (Data.Map.Base.Tip
                            @ (GHC.Base.Maybe Data.Text.Internal.Text)
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Data.Text.Internal.Builder.Builder))
                         (GHC.Base.Nothing
                            @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                -> Data.Text.Internal.Text)
                               -> Text.Julius.Javascript))
                         (Yesod.Core.Types.$fApplicativeWidgetT2
                            @ (Yesod.Routes.Class.Route Foundation.Sitio))
                           `cast`
                         (Sym (Yesod.Core.Types.N:Head[0]
                                   <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
ddc01f6a3595abecfd21fc46fb4e952c
  getHelloR5 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         (Foundation.SitioMessage -> Text.Blaze.Html.Html,
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Foundation.SitioMessage -> Data.Text.Internal.Text)
                   @ (Foundation.SitioMessage -> Text.Blaze.Html.Html)
                   Handlers.getHelloR_m1
                   Handlers.getHelloR6
                     `cast`
                   (<Foundation.SitioMessage -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <(Foundation.SitioMessage -> Text.Blaze.Html.Html,
                                              Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route Foundation.Sitio))>_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N
                                       <GHC.Types.IO>_N
                                       <Foundation.SitioMessage -> Text.Blaze.Html.Html>_N)))
                   eta36) -}
d20558d4657669979f5c89d7a4efbff7
  getHelloR6 ::
    (Foundation.SitioMessage -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Foundation.SitioMessage -> Text.Blaze.Html.Html,
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (x7 :: Foundation.SitioMessage
                          -> Data.Text.Internal.Text)
                   (ds8 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio
                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (\ (x8 :: Foundation.SitioMessage) ->
                     Text.Blaze.Internal.Content
                       @ ()
                       (Text.Blaze.Internal.Text (x7 x8)),
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)) #)) -}
2204b2c8e53cb0d87bf83d3a347114a4
  getHelloR7 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getHelloR8 eta37) -}
59964ccb11b86876963542ae9d549958
  getHelloR8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Handlers.getHelloR9 #)) -}
4a462df02539d6e33e0c59534691c87d
  getHelloR9 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHelloR10
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
931569a60ba506d97f62127fb8782cca
  getHelloR_eta :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHelloR12) -}
8e74d5db900762d375b76ae2f9437231
  getHelloR_m1 ::
    Yesod.Core.Types.WidgetT
      Foundation.Sitio
      GHC.Types.IO
      (Foundation.SitioMessage -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getMessageRender
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.SitioMessage
                   (Handlers.$s$fMonadHandlerWidgetT @ Foundation.Sitio)
                   Foundation.$fRenderMessageSitioSitioMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Foundation.SitioMessage>_N))) -}
359ac0249c1dfedfb0bf7de56f300f30
  getListarR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListarR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c1f51180fe0beedf109457816ac195ff
  getListarR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                        Handlers.getListarR8
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                     {- Arity: 3 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                       (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     Handlers.getListarR7 ipv1 eta36 eta37
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getListarR2
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl145
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <((),
                                                       Yesod.Core.Types.GWData
                                                         (Yesod.Routes.Class.Route
                                                            Foundation.Sitio))>_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta36
                      } in
                      (\ (eta36 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         m2
                           `cast`
                         (Sym (Yesod.Core.Types.N:WidgetT[0]
                                   <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         Handlers.getArtistaLstR4
                         eta36)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
a648667312bda7b02e43b7e3772b45ec
  getListarR10 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Pessoa
                   @ Data.Text.Internal.Text
                   Handlers.getListarR11
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldPessoatyp0[0]) <Data.Text.Internal.Text>_N)) -}
ecb8732ce5624c4917987c12d607b63f
  getListarR11 ::
    Foundation.R:EntityFieldPessoatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.PessoaNome
                   @ Data.Text.Internal.Text
                   Handlers.getListarR12
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
0784ff79d1379a418b9eed540192802e
  getListarR12 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
fa264c39389db7a1e99bf661965bc194
  getListarR13 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Pessoa,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityPessoa,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
4a607152843e555cfd71f74d9a5021dc
  getListarR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getListarR3 eta37) -}
838c965d4944f1ac59f7a538d100e159
  getListarR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getListarR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
29d5fd105da6948cde054a0ff865022f
  getListarR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getListarR5) -}
57b8d4921a906ffe01961a6091c76504
  getListarR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getListarR6) -}
98c0d7d9ed36dc4aae6de6b36dce45ba
  getListarR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Pessoas cadastradas:</h1>\n"#) -}
0fe87b0ccc9fd71d3be5d1dde008b6b4
  getListarR7 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
993c54947e9ddbdf817b82d0d584737c
  getListarR8 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
                   = Handlers.getListarR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Pessoa))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Pessoa))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Pessoa)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Pessoa]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Pessoa]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Pessoa]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Pessoa]>_N)))) -}
b7b63ed16202f1a868e8020efa9931b2
  getListarR9 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Pessoa)
                   Handlers.getListarR10
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Pessoa))) -}
1628d75a30a3b145fe17aa1b512db534
  getListarR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getListarR4) -}
6afc9d6126133af2e507234e47b42eb3
  getListarR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Pessoa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.getListarR13
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Pessoa))
                   Handlers.getListarR9) -}
9587bad69c2f60a8cb538f17675cb27e
  getMusicaIdR ::
    Foundation.MusicasId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (mid :: Foundation.MusicasId) ->
                 let {
                   ds8 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                            Foundation.Musicas
                   = Handlers.getMusicaIdR6 mid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ Foundation.Musicas
                         ds8
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <Foundation.Musicas>_N)_R
                         r
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Foundation.$fYesodSitio_$cdefaultLayout
                      (let {
                         x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 1, Strictness: <S,U> -}
                         = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           let {
                             eta36 :: Data.Text.Internal.Text
                             = case ipv1 of wild { Foundation.Musicas ds10 ds11 ds12 -> ds10 }
                           } in
                           let {
                             eta37 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text eta36
                           } in
                           let {
                             eta38 :: Text.Blaze.Html.Html
                             = Text.Blaze.Internal.Content @ () eta37
                           } in
                           (# s1,
                              (GHC.Tuple.(),
                               (Yesod.Core.Types.GWData
                                  @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                  (\ (ds10 :: Yesod.Routes.Class.Route Foundation.Sitio
                                              -> [(Data.Text.Internal.Text,
                                                   Data.Text.Internal.Text)]
                                              -> Data.Text.Internal.Text) ->
                                   eta38)
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Body[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                  (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                    `cast`
                                  (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Script
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Script
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Stylesheet
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Stylesheet
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (Data.Map.Base.Tip
                                     @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Data.Text.Internal.Builder.Builder))
                                  (GHC.Base.Nothing
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Text.Julius.Javascript))
                                  (Yesod.Core.Types.$fApplicativeWidgetT2
                                     @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Head[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                 `cast`
                               (Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                       } in
                       let {
                         m2 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 2, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                        Foundation.Sitio
                                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                            (eta37 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                          x7 eta37) -}
                         = \ (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           x7
                       } in
                       let {
                         lvl145 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.Sitio))
                           {- Arity: 2 -}
                         = \ (ds10 :: ())
                             (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.Sitio
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             m2
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.Sitio>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             Handlers.getAlbumIdR6
                               `cast`
                             (<()>_R
                              ->_R Trans
                                       (<Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      ((,)
                                                         <()>_R
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                         <GHC.Types.IO>_N
                                                                         <Foundation.Sitio>_N)))_R)_R)_R))
                                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             eta36
                       } in
                       (\ (eta36 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                        Yesod.Core.Types.$fApplicativeWidgetT3
                          @ GHC.Types.IO
                          @ Foundation.Sitio
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handlers.getMusicaIdR1
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              ((,)
                                                 <()>_R
                                                 (Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                 <GHC.Types.IO>_N
                                                                 <Foundation.Sitio>_N)))_R)_R)_R))
                               (Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                          lvl145
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                          eta36)
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
4cbff81f2354cbac2d0ca55fdb2e045c
  getMusicaIdR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getMusicaIdR2 eta37) -}
7bfb45220f99654796ca9cc89f29dba2
  getMusicaIdR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getMusicaIdR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
ba5e85f93a8f0381783ea5dc9344a278
  getMusicaIdR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getMusicaIdR4) -}
6b38c616bef6df1aac943d1ae4e13b55
  getMusicaIdR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getMusicaIdR5) -}
d4484f45136535c67250821d042e9b64
  getMusicaIdR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> M\\195\\186sica "#) -}
c1968b26f7fbdd79f1a4b61c3d770b59
  getMusicaIdR6 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Musicas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         Foundation.Musicas
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.Musicas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handlers.getMusicaIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Musicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
06f4b0bf6be33d7fcb44d0e0d87a2149
  getMusicaIdR7 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Musicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityMusicas,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
2a4d55a9eefd136949fe393ef3a18f44
  getMusicaIdR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getMusicaIdR3) -}
ae85e45d77ed2526dde53a8f168fd36c
  getMusicaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getMusicaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
6f9b43d1798e6b058ce5aa38ecaf1979
  getMusicaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getMusicaR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroMusica1
                       Foundation.MusicaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getMusicaR4
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getMusicaR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl145
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
1631ddff31db41d9601f777df917efe8
  getMusicaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getMusicaR3 eta37) -}
4b1bd1d9931baf1046e15b9f5cb27604
  getMusicaR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.cadastromusica_css1
                                     `cast`
                                   (Sym (Yesod.Static.D:R:RouteStatic0[0])))
                                  `cast`
                                (Trans
                                     (Sym (Foundation.D:R:RouteSitio0[0]))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Sitio GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO))>_R))) #)) -}
1050bc70dd2ce92515a02b587efa7ffc
  getMusicaR4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Nova m\\195\\186sica"#) -}
95dc5ba8f7e20642c1ba3f90c4a6795a
  getMusicaR5 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Musicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
12731c9e982adbd6091c55417721693d
  getPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
8d1a930e79f477aa5bcbb580038947a3
  getVertenteIdR ::
    Foundation.VertentesId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (vid :: Foundation.VertentesId) ->
                 let {
                   ds8 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                            Foundation.Vertentes
                   = Handlers.getVertenteIdR6 vid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ Foundation.Vertentes
                         ds8
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <Foundation.Vertentes>_N)_R
                         r
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Foundation.$fYesodSitio_$cdefaultLayout
                      (let {
                         x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 1, Strictness: <S,U> -}
                         = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           let {
                             eta36 :: Data.Text.Internal.Text
                             = case ipv1 of wild { Foundation.Vertentes ds10 -> ds10 }
                           } in
                           let {
                             eta37 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text eta36
                           } in
                           let {
                             eta38 :: Text.Blaze.Html.Html
                             = Text.Blaze.Internal.Content @ () eta37
                           } in
                           (# s1,
                              (GHC.Tuple.(),
                               (Yesod.Core.Types.GWData
                                  @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                  (\ (ds10 :: Yesod.Routes.Class.Route Foundation.Sitio
                                              -> [(Data.Text.Internal.Text,
                                                   Data.Text.Internal.Text)]
                                              -> Data.Text.Internal.Text) ->
                                   eta38)
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Body[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                  (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                    `cast`
                                  (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Script
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Script
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Stylesheet
                                          (Yesod.Routes.Class.Route Foundation.Sitio)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Stylesheet
                                               (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                  (Data.Map.Base.Tip
                                     @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Data.Text.Internal.Builder.Builder))
                                  (GHC.Base.Nothing
                                     @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Text.Julius.Javascript))
                                  (Yesod.Core.Types.$fApplicativeWidgetT2
                                     @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Head[0]
                                            <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                 `cast`
                               (Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                       } in
                       let {
                         m2 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Sitio GHC.Types.IO)))) #)
                           {- Arity: 2, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                        Foundation.Sitio
                                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                            (eta37 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                          x7 eta37) -}
                         = \ (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           x7
                       } in
                       let {
                         lvl145 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.Sitio))
                           {- Arity: 2 -}
                         = \ (ds10 :: ())
                             (eta36 :: Yesod.Core.Types.HandlerData
                                         Foundation.Sitio
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.Sitio
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             m2
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.Sitio>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             Handlers.getAlbumIdR6
                               `cast`
                             (<()>_R
                              ->_R Trans
                                       (<Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      ((,)
                                                         <()>_R
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                         <GHC.Types.IO>_N
                                                                         <Foundation.Sitio>_N)))_R)_R)_R))
                                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             eta36
                       } in
                       (\ (eta36 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                        Yesod.Core.Types.$fApplicativeWidgetT3
                          @ GHC.Types.IO
                          @ Foundation.Sitio
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handlers.getVertenteIdR1
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              ((,)
                                                 <()>_R
                                                 (Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                 <GHC.Types.IO>_N
                                                                 <Foundation.Sitio>_N)))_R)_R)_R))
                               (Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                          lvl145
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                          eta36)
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
cce03acb53d9e7fc1baa5271a4f90446
  getVertenteIdR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handlers.getVertenteIdR2 eta37) -}
4bce3b8f558dbadfc2feb73bc6d3e265
  getVertenteIdR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handlers.getVertenteIdR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
a7618e499a6873f9a72c14160aaf304f
  getVertenteIdR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getVertenteIdR4) -}
3f6bc08304f07a101ecfc97291274258
  getVertenteIdR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getVertenteIdR5) -}
7fbff3c36bfc5dd9ec45ae2b4635c90e
  getVertenteIdR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> Vertente "#) -}
cccd8ecd3cab290dd9ccafbaa1653e5a
  getVertenteIdR6 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Vertentes
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         Foundation.Vertentes
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.Vertentes
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handlers.getVertenteIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
be8adde0837ad2aeb4a309a6c760378a
  getVertenteIdR7 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
f11840c17e7142cf472d6d5bbb5f5e1e
  getVertenteIdR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getVertenteIdR3) -}
cc568aba28b26de438c8c188ea76c487
  getVertenteLstR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getVertenteLstR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
7a3b0d83e2ec0ff3d0253f86fd131c30
  getVertenteLstR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes]
                        Handlers.getVertenteLstR5
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                          {- Arity: 2 -}
                        = Handlers.getVertenteLstR4 ipv1
                      } in
                      let {
                        lvl145 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds9 :: ())
                            (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m2
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <((),
                                                  Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       Foundation.Sitio))>_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            Handlers.getArtistaLstR41
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta36
                      } in
                      let {
                        m3 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getArtistaLstR36
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl145
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta36
                      } in
                      let {
                        lvl146 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds9 :: ())
                            (eta36 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m3
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getVertenteLstR2
                            eta36
                      } in
                      (\ (eta36 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getArtistaLstR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.Sitio>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                         lvl146
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         eta36)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
87e4ec1cb647671b875a17a3b5213972
  getVertenteLstR2 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: (\ (ds8 :: ()) -> Handlers.getVertenteLstR3) -}
61f1ab83b087264a0fc69da418120fcf
  getVertenteLstR3 ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$fToWidgetHeadsite(->)1_$ctoWidget
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ Foundation.Sitio
                   Handlers.$stoWidget4
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Yesod.Routes.Class.Route
                                                             Foundation.Sitio
                                                           -> [(Data.Text.Internal.Text,
                                                                Data.Text.Internal.Text)]
                                                           -> Data.Text.Internal.Text>_N <Yesod.Routes.Class.Route
                                                                                            Foundation.Sitio
                                                                                          -> [(Data.Text.Internal.Text,
                                                                                               Data.Text.Internal.Text)]
                                                                                          -> Data.Text.Internal.Text>_N)
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   (Handlers.$s$fMonadWidgetWidgetT @ Foundation.Sitio)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   Handlers.getArtistaLstR6) -}
75b5c361972a171b7f475bda86cefd91
  getVertenteLstR4 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
ffed4d828942897cb0c9d8a77eb9248c
  getVertenteLstR5 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes)))
                   = Handlers.getVertenteLstR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Vertentes))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Vertentes]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Vertentes)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Vertentes]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Vertentes]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Vertentes]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vertentes]>_N)))) -}
f3cb2be184ffb82319815e32ac3f043c
  getVertenteLstR6 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.getVertenteLstR7
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
bf49b2225c6a670b62ebe85aaf653f5c
  getVertenteLstR7 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.getVertenteLstR8
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
66e932114ce3e57700835ba7d029373b
  getVertenteLstR8 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.getVertenteLstR9
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
aca2f5e8cf36db08331b725db3b0924a
  getVertenteLstR9 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
5d0edc346d3875331bf33758ccf8fc84
  getVertenteLstR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Vertentes)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Vertentes
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.getVertenteIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Vertentes))
                   Handlers.getVertenteLstR6) -}
1ca7ad8c9cea4e428752abc8f7155021
  getVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ca92c098fd357727b9e202e9937f606d
  getVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.getVertenteR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 let {
                   lvl145 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds9 :: ())
                       (eta36 :: Yesod.Core.Types.HandlerData
                                   Foundation.Sitio
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Foundation.widgetFormCadastroSimples1
                       Foundation.VertenteR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       enctype
                       widget
                       Handlers.getVertenteR2
                       eta36
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (\ (eta36 :: Yesod.Core.Types.HandlerData
                                    Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                      Yesod.Core.Types.$fApplicativeWidgetT3
                        @ GHC.Types.IO
                        @ Foundation.Sitio
                        GHC.Base.$fMonadIO
                        @ ()
                        @ ()
                        Handlers.getAlbumMusR2
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.Sitio>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                        lvl145
                          `cast`
                        (<()>_R
                         ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                        eta36)
                       `cast`
                     (Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
82e663b4e801d34fb7fe9eb7e865264d
  getVertenteR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Nova vertente"#) -}
e648a0d9606822c0ff9c4c950be5a24e
  getVertenteR3 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
6a71a3cf6d1a4d324877619aa90c7b12
  msc ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Musicas
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityMusicas,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Musicas>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Musicas))
                          Handlers.msc11)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Musicas]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Musicas]>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                         Handlers.msc2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Musicas)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Musicas)>_N)))) -}
05dd5815d9f3b223454f0ff25e4a4ee8
  msc1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Musicas) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                        Handlers.msc3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Musicas]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                        Handlers.msc2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)>_R)
                   ipv }) -}
8dcb7b48d81642a141966133bdad9bd7
  msc10 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
1d26cf95bc905358e0d21853709a5c9b
  msc11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Musicas)
                   Handlers.msc12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Musicas))) -}
454a6d013c4d55462c504084b69cae32
  msc12 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Musicas
                   @ Data.Text.Internal.Text
                   Handlers.msc13
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldMusicastyp0[0]) <Data.Text.Internal.Text>_N)) -}
9375dcddf5716962b4231b9f099e9615
  msc13 :: Foundation.R:EntityFieldMusicastyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.MusicasNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
f38296a3a39ba8e2dabffde096b0b85e
  msc2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Musicas
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U,A,A))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Musicas) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds8 ds9 ->
                  case ds9 of wild1 { Foundation.Musicas ds10 ds11 ds12 -> ds10 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Musicas
                    ent)) -}
c851162b4b69a1c1646dba5fc62185db
  msc3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)))
                   = Handlers.msc4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Musicas))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Musicas))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Musicas))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Musicas]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Musicas)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Musicas]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Musicas]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Musicas]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Musicas]>_N)))) -}
57747cc31a78b30f996739185ae68de9
  msc4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Musicas)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Musicas
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.msc9
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Musicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Musicas))
                   Handlers.msc5) -}
a6dc40dd93106b372c1cde4c7aad7f8e
  msc5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Musicas)
                   Handlers.msc6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Musicas))) -}
22e01504aa6cda307c48fb98e54a5549
  msc6 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Musicas
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Musicas
                   @ Data.Text.Internal.Text
                   Handlers.msc7
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldMusicastyp0[0]) <Data.Text.Internal.Text>_N)) -}
83c23c8161672448b23888da0e232aa8
  msc7 :: Foundation.R:EntityFieldMusicastyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.MusicasNome
                   @ Data.Text.Internal.Text
                   Handlers.msc8
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
c0d4ff20e0d4678c371dd656dcfb0dfd
  msc8 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
e4906044a351ab8078a58d69a2b15aed
  msc9 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Musicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityMusicas,
                  Handlers.msc10
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
311f69db6bbf295531311746052bf5e0
  postAlbumMusR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postAlbumMusR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0fe7ed06dd6ecaf057f28ea4e9e3a98a
  postAlbumMusR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postAlbumMusR13
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postAlbumMusR12
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess albummsc
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.AlbunsMusicas)
                             (Handlers.postAlbumMusR10 albummsc)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.AlbunsMusicas>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      (Handlers.postAlbumMusR2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
397402fc99a17f8ab0887470e0797757
  postAlbumMusR10 ::
    Foundation.AlbunsMusicas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.AlbunsMusicas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.AlbunsMusicas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postAlbumMusR11
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.AlbunsMusicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAlbunsMusicas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
7eba4a26f0c7c570aa0451a29e743cbe
  postAlbumMusR11 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.AlbunsMusicas,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityAlbunsMusicas,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
42b21f34f2c4c1815430a36c30a84a32
  postAlbumMusR12 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.AlbumMusR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
789307696dfeeae6bcf7499f7ba82918
  postAlbumMusR13 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.AlbunsMusicas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.AlbunsMusicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbunsMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.AlbunsMusicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
64dbf955e42be8f973ea584a1de05472
  postAlbumMusR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.postAlbumMusR3
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
125b46e000fdb2db9faac62f0cb86462
  postAlbumMusR3 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postAlbumMusR4 #)) -}
2d3403491f046604f215fc3515aba1f8
  postAlbumMusR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postAlbumMusR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
78f5e15ebfe22abdb01be70812801901
  postAlbumMusR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postAlbumMusR6
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
765e8ba908ec94f221ae2c0ee4795813
  postAlbumMusR6 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postAlbumMusR_eta) -}
eadb9dba5d338cd707af4aec747c5ef8
  postAlbumMusR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postAlbumMusR8) -}
85633b8567f79cafecacd482d397d29d
  postAlbumMusR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.postAlbumMusR9) -}
422882b721ffe715fa983839ea588f00
  postAlbumMusR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Inserido com sucesso. </h1>\n"#) -}
690946b81c27b1027117b4eaf93a78a2
  postAlbumMusR_eta :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postAlbumMusR7) -}
3ec3989485e9a24510357834cddffa94
  postAlbumR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postAlbumR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2fea6b388ba938cb4d0aac2816d62c4e
  postAlbumR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postAlbumR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Albuns,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Albuns,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postAlbumR10
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess album
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
                             (Handlers.postAlbumR9 album)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Albuns>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case album of wild3 { Foundation.Albuns ds13 ds14 -> ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
f0fdcaa993e9bf9e90b33ec6663eecb8
  postAlbumR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.AlbumR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
1f37264f5f6664e952b5dbdb2702a55c
  postAlbumR11 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Albuns,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Albuns
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formAlbuns1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Albuns>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
295e88f50ffb829b2f568ac526754974
  postAlbumR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds8 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postAlbumR3 #)) -}
28d31d7e1ccd600d0b4a422cec0b3d83
  postAlbumR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postAlbumR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
1d7b897dee9926953f949007bda9123e
  postAlbumR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postAlbumR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
14d56db05fca6549f3f7794fd7c40328
  postAlbumR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postAlbumR_eta) -}
2f42085958a7767520984e04c544475b
  postAlbumR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.postAlbumR7) -}
8b23bb3458fff7e7ccb5c22a8d1d35d3
  postAlbumR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postAlbumR8) -}
ec5ec9dd512dbdb5f471d6e01e8c95ba
  postAlbumR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inserido com sucesso. </h1>\n"#) -}
39d9e6e307f0b9f84b72d7c5ffe710f8
  postAlbumR9 ::
    Foundation.Albuns
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Albuns)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Albuns
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getAlbumIdR14
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Albuns>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAlbuns[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
c6cb0554b3fbfe41c82a57a5b387c1dd
  postAlbumR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postAlbumR6) -}
816755ceea7e52d4997a8dd6ac458eae
  postArtistaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postArtistaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
b9a01e315b37e5fb6b16cb64469070c2
  postArtistaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postArtistaR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Artistas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Artistas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postArtistaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess artista
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
                             (Handlers.postArtistaR2 artista)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Artistas>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case artista of wild3 { Foundation.Artistas ds13 -> ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
9d212798488270794b8eaf323bbc511d
  postArtistaR2 ::
    Foundation.Artistas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Artistas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Artistas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getArtistaIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Artistas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendArtistas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
e1c240c87e259986ccca45b0fd1985fc
  postArtistaR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ArtistaR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
6d8333515b0465db16d295362a03e2b3
  postArtistaR4 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Artistas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Artistas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formArtistas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Artistas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
dfb0eefa417ee35e921a507feadafa08
  postCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
a489502712e4cac7ec3335214ad1ef1b
  postCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postCadastroR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadastroR10
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
                             (Handlers.postCadastroR9 pessoa)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Pessoa>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case pessoa of wild3 { Foundation.Pessoa ds13 dt dt1 ds14 ->
                                   ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postCadastroR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
48bb3f56bc96bee9cfc30ab3f62c7bb2
  postCadastroR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.CadastroR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
5356b43310c63fa6a201a214421c9757
  postCadastroR11 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Pessoa,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Pessoa>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ce6b7e71c5b69470be57b827aac4661c
  postCadastroR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds8 :: ())
                   (eta36 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta37 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta37, Handlers.postCadastroR3 #)) -}
22ea4bf41fc4d78d7a2ddcae369a1fd6
  postCadastroR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postCadastroR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
469dcaf2a2a0890775e44b0592119cc9
  postCadastroR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postCadastroR5
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
725f0ab637991f3239b1d3746343bf45
  postCadastroR5 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds8 :: Yesod.Routes.Class.Route Foundation.Sitio
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handlers.postCadastroR_eta) -}
0f62ec34b30a0698e356f2ecd36f02b6
  postCadastroR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postCadastroR7) -}
23ae368bfb37eb380f90254ea5edcfde
  postCadastroR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postCadastroR8) -}
87d69d0c37dff6093fe0adba82201977
  postCadastroR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inseridx com sucesso. </h1>\n"#) -}
1a2b6e36cdef27429edc0b66cd9f1e92
  postCadastroR9 ::
    Foundation.Pessoa
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getListarR13
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Pessoa>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
ab885329880b5a9881890cf82b7bb67c
  postCadastroR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postCadastroR6) -}
ce3902c525e845697f7876d5cb5ce3c2
  postDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
fcb5ee6ec9716ce2523986878161b891
  postDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postDeptoR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Departamento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Departamento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postDeptoR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess depto
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Departamento)
                             (Handlers.postDeptoR2 depto)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Departamento>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case depto of wild3 { Foundation.Departamento ds13 ds14 -> ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
196187cf8ed99c5ac57cb6152c4fbd3f
  postDeptoR2 ::
    Foundation.Departamento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Departamento
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.postDeptoR3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Departamento>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendDepartamento[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
b6eefc4bfcfc05a327ea3b327171e6f5
  postDeptoR3 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Departamento,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityDepartamento,
                  Handlers.getAlbumIdR15
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
39f250d0ce72e35224ff156fb898a471
  postDeptoR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.DeptoR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
45c13fddece2dda9fe99e25104fe70dc
  postDeptoR5 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Departamento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Departamento>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
04d61b8867afb1abae1581aa035d76ea
  postMusicaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postMusicaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
db6802842110466d478fa3af2e339bb8
  postMusicaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postMusicaR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Musicas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Musicas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postMusicaR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess musica
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
                             (Handlers.postMusicaR2 musica)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key Foundation.Musicas>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case musica of wild3 { Foundation.Musicas ds13 ds14 ds15 ->
                                   ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
539b4d0d4675c9314b3bed38fd5fe2ac
  postMusicaR2 ::
    Foundation.Musicas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Musicas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Musicas
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getMusicaIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Musicas>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendMusicas[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
2d25ee80b004e6c8c1dd42c07f21b6b5
  postMusicaR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.MusicaR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
f5ad03f1c879db93a6f64431dc135515
  postMusicaR4 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Musicas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Musicas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formMusicas1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Musicas>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
76b8863f117c1b23d7158d1bb93eafcd
  postPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (pid :: Foundation.PessoaId) ->
                 let {
                   m2 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           ()
                   = Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                       @ Foundation.Pessoa
                       (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.Sitio)
                       Handlers.getListarR13
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Pessoa>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendPessoa[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       pid
                 } in
                 (\ (eta36 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistSitio1
                         @ ()
                         m2
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                            <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                            <()>_N)_R
                         eta36
                         s of ds8 { (#,#) ipv ipv1 ->
                  (Handlers.postPessoaR1
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     eta36)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
75d43d715a08cd6928ae80cefd3f1db3
  postPessoaR1 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ListarR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
1477d31e81e35b3392b2ad0877775243
  postVertenteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVertenteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
a709e7aab68500df1b43f6fe798a35a4
  postVertenteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handlers.postVertenteR4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Vertentes,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds8 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds9 ds10 ->
                 case ds9 of wild1 { (,) result ds11 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postVertenteR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess vertente
                   -> case Foundation.$fYesodPersistSitio1
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                             (Handlers.postVertenteR2 vertente)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                                <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                <Database.Persist.Class.PersistEntity.Key
                                   Foundation.Vertentes>_N)_R
                             r
                             ipv of ds12 { (#,#) ipv2 ipv3 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             x7 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta36 :: Data.Text.Internal.Text
                                 = case vertente of wild3 { Foundation.Vertentes ds13 -> ds13 }
                               } in
                               let {
                                 eta37 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.Text eta36
                               } in
                               let {
                                 eta38 :: Text.Blaze.Html.Html
                                 = Text.Blaze.Internal.Content @ () eta37
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                      (\ (ds13 :: Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text) ->
                                       eta38)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                           } in
                           let {
                             m2 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta36 :: Yesod.Core.Types.HandlerData
                                                            Foundation.Sitio
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta37 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x7 eta37) -}
                             = \ (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x7
                           } in
                           let {
                             lvl145 :: ()
                                       -> Yesod.Core.Types.HandlerData
                                            Foundation.Sitio
                                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                       -> GHC.Types.IO
                                            ((),
                                             Yesod.Core.Types.GWData
                                               (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ (ds13 :: ())
                                 (eta36 :: Yesod.Core.Types.HandlerData
                                             Foundation.Sitio
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.Sitio
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m2
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postAlbumR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta36
                           } in
                           (\ (eta36 :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.Sitio
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.getHelloR7
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl145
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta36)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } } }) -}
d09ba61020668181571e929d3c0bc67b
  postVertenteR2 ::
    Foundation.Vertentes
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vertentes
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handlers.getVertenteIdR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
d83a254184154103e28f98ef8b5b2fc4
  postVertenteR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.VertenteR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
084c13e7099bbc1d3b7afbedfd220847
  postVertenteR4 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Vertentes,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Vertentes
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handlers.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handlers.formVertentes1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Vertentes>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
83db5ae8688fbdc3c28ccbf740acf1f2
  vts ::
    (Database.Persist.Class.PersistStore.BaseBackend
       (Yesod.Persist.Core.YesodPersistBackend site)
     GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend,
     Yesod.Persist.Core.YesodPersist site,
     Database.Persist.Class.PersistQuery.PersistQueryRead
       (Yesod.Persist.Core.YesodPersistBackend site)) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes))
  {- Arity: 3,
     Strictness: <L,U><L,1*U(A,1*C1(U))><L,1*U(A,A,1*C1(C1(C1(C1(C1(U))))),A,A,A)>,
     Unfolding: (\ @ site
                   (cobox0 :: Database.Persist.Class.PersistStore.BaseBackend
                                (Yesod.Persist.Core.YesodPersistBackend site)
                              GHC.Prim.~# Database.Persist.Sql.Types.Internal.SqlBackend)
                   ($dYesodPersist :: Yesod.Persist.Core.YesodPersist site)
                   ($dPersistQueryRead :: Database.Persist.Class.PersistQuery.PersistQueryRead
                                            (Yesod.Persist.Core.YesodPersistBackend site)) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            site
                            GHC.Types.IO
                            [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes]
                       (Database.Persist.Class.PersistQuery.selectList
                          @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                          @ (Yesod.Persist.Core.YesodPersistBackend site)
                          @ Foundation.Vertentes
                          (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ site)
                          $dPersistQueryRead
                          (Foundation.$fPersistEntityVertentes,
                           (GHC.Types.Eq#
                              @ *
                              @ *
                              @ Database.Persist.Sql.Types.Internal.SqlBackend
                              @ (Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site))
                              @~ (Sym cobox0))
                             `cast`
                           (Sym (Data.Type.Equality.N:~[0]
                                     <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                                  (Yesod.Persist.Core.YesodPersistBackend
                                                                                                     site)>_N))
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Foundation.Vertentes>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                                <Database.Persist.Class.PersistStore.BaseBackend
                                   (Yesod.Persist.Core.YesodPersistBackend site)>_N)_N)_R
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Vertentes))
                          Handlers.vts7)
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Vertentes]>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Vertentes]>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                      (Handlers.$s$fMonadHandlerHandlerT @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <site>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Vertentes)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                         Handlers.vts2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Vertentes)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Vertentes)>_N)))) -}
b43afb458fee54729c6f340dadd25812
  vts1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes]
                        Handlers.vts3
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio>_R
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes]>_N))
                        r
                        s of ds8 { (#,#) ipv ipv1 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                     (Handlers.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                               (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
                        Handlers.vts2
                        ipv1))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)>_R)
                   ipv }) -}
ae7b3f6563f90b3ca3b10ea70cde2cb0
  vts2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Vertentes)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,1*U,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ent :: Database.Persist.Class.PersistEntity.Entity
                             Foundation.Vertentes) ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds8 ds9 ->
                  case ds9 of wild1 { Foundation.Vertentes ds10 -> ds10 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Vertentes
                    ent)) -}
cca49f2947b949738f7715e533d08478
  vts3 ::
    Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Yesod.Persist.Core.YesodPersistBackend
                            Foundation.Sitio) ->
                 let {
                   ds8 :: Yesod.Core.Types.HandlerT
                            Foundation.Sitio
                            GHC.Types.IO
                            (Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes)))
                   = Handlers.vts4
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Vertentes))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds8
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vertentes))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Vertentes))>_R)
                         s of ds9 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Vertentes))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Vertentes]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Vertentes)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Vertentes)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Vertentes]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Vertentes]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Vertentes]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vertentes]>_N)))) -}
a6105b47764669645533961c04bce3cd
  vts4 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Vertentes)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Vertentes
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handlers.vts5
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Vertentes>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendVertentes[0]))
                         (Database.Persist.Class.PersistStore.BaseBackend
                            (Foundation.D:R:YesodPersistBackendSitio[0]))_N)_N)_R
                   (Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Vertentes))
                   Handlers.getVertenteLstR6) -}
b88615146c2e1556ac94034396cf7494
  vts5 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Vertentes,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Class.PersistStore.BaseBackend
                            (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
  {- Unfolding: ((Foundation.$fPersistEntityVertentes,
                  Handlers.vts6
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Class.PersistStore.BaseBackend
                                                                                         (Yesod.Persist.Core.YesodPersistBackend
                                                                                            Foundation.Sitio)>_N))) -}
f6bd3c238667cc58735229fb4a60e355
  vts6 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Class.PersistStore.BaseBackend
                   (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio)
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ (Database.Persist.Class.PersistStore.BaseBackend
                        (Yesod.Persist.Core.YesodPersistBackend Foundation.Sitio))
                   @~ (Trans
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           (Database.Persist.Class.PersistStore.BaseBackend
                              (Sym (Foundation.D:R:YesodPersistBackendSitio[0])))_N)) -}
1c6266ca4330a49d3b38f266026e9d32
  vts7 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Vertentes]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Vertentes)
                   Handlers.vts8
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vertentes))) -}
fe174e5c4991f8c4356341a5c0a4128f
  vts8 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vertentes
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vertentes
                   @ Data.Text.Internal.Text
                   Handlers.vts9
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldVertentestyp0[0]) <Data.Text.Internal.Text>_N)) -}
ee1e53649628364aea81029b81c418eb
  vts9 ::
    Foundation.R:EntityFieldVertentestyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.VertentesNome
                   @ Data.Text.Internal.Text
                   Handlers.$s$WAlbunsNome_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
"SPEC/Handlers $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                             ($dMonad :: GHC.Base.Monad
                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handlers.$s$fApplicativeHandlerT @ site
"SPEC/Handlers $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handlers.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handlers $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handlers $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                 GHC.Types.IO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handlers $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                               GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handlers.$s$fMonadHandlerHandlerT @ site
"SPEC/Handlers $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handlers $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handlers.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Handlers $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                             ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                              GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handlers.$s$fMonadHandlerWidgetT @ site
"SPEC/Handlers $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handlers $fMonadIOHandlerT_$cp1MonadLogger @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cp1MonadLogger @ GHC.Types.IO
                                                     @ site
                                                     $dMonadIO
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
      @ site
"SPEC/Handlers $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                  GHC.Types.IO)
                                                               ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                 GHC.Types.IO
                                                                                 GHC.Types.IO)
                                                               ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp3MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp3MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
      @ site
"SPEC/Handlers $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                    GHC.Types.IO)
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
                                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handlers.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handlers $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handlers $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                     ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handlers.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handlers $fMonadWidgetWidgetT @ IO _" [ALWAYS] forall @ site
                                                            ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ GHC.Types.IO
                                                @ site
                                                $d(%,,,,%)
  = Handlers.$s$fMonadWidgetWidgetT @ site
"SPEC/Handlers doubleField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                        (Yesod.Core.Class.Handler.HandlerSite
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.Sitio
                                                                                              GHC.Types.IO))
                                                                                        Yesod.Form.Types.FormMessage)
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                (Yesod.Core.Types.HandlerT
                                                                                   Foundation.Sitio
                                                                                   GHC.Types.IO))
  Yesod.Form.Fields.doubleField @ (Yesod.Core.Types.HandlerT
                                     Foundation.Sitio GHC.Types.IO)
                                $dMonad
                                $dRenderMessage
  = Handlers.$sdoubleField
"SPEC/Handlers textField @ (HandlerT Sitio IO)" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.Sitio
                                                                                            GHC.Types.IO))
                                                                                      Yesod.Form.Types.FormMessage)
                                                                ($dMonad :: GHC.Base.Monad
                                                                              (Yesod.Core.Types.HandlerT
                                                                                 Foundation.Sitio
                                                                                 GHC.Types.IO))
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.Sitio GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handlers.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

